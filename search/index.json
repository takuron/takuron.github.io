[{"content":"本系列用于聚合本人安装使用ArchLinux过程中遇到的一些问题。第一篇就从重新安装ArchLinux的记录开始，本人主要的安装过程请参考archlinux 简明指南，本文也会以其的指导为基础主要列出一些本人的一些个性化配置。\n基础安装 archlinux 基础安装 | archlinux 简明指南 基础安装部分其实没有什么个性化的内容。个人其实认为目前随着Windows的安全机制完善，双系统反而破坏了Windows的一些安全特性，故本人更建议直接全新安装。\nNvme硬盘的先进格式化与4kn模式 参考：\n先进格式化 - Arch Linux 中文维基 教你把 NVMe SSD 切换到原生4K模式 - 知乎 2025年的绝大多数Nvme硬盘和部分企业级机械硬盘已经使用了更先进的原生4K物理分区，但为了保证向下兼容性，几乎全部消费级的盘默认开启的都是模拟远古512b扇区的模式，这样理论上会产生逻辑扇区和物理扇区的对齐问题导致性能损失(不过实际对于消费级的低负载基本无影响)。 出于强迫症，既然正好要格式化硬盘就顺便把这个改了。\n首先查看所有硬盘和分区：\n1 2 3 4 5 6 7 # lsblk --fs NAME FSTYPE LABEL UUID MOUNTPOINT sda ├─sda1 vfat C4DA-2C4D /boot ├─sda2 swap 5b1564b2-2e2c-452c-bcfa-d1f572ae99f2 [SWAP] └─sda3 ext4 56adc99b-a61e-46af-aab7-a6d07e504652 / 选择需要的硬盘（nvme0n1为例），查找支持的格式化后逻辑块地址大小（Formatted Logical Block Address Size, FLBAS）。\n1 2 3 4 # nvme id-ns -H /dev/nvme0n1 | grep \u0026#34;Relative Performance\u0026#34; LBA Format 0 : Metadata Size: 0 bytes - Data Size: 512 bytes - Relative Performance: 0x2 Good (in use) LBA Format 1 : Metadata Size: 0 bytes - Data Size: 4096 bytes - Relative Performance: 0x1 Better 找到可用的LBA Format后使用以下命令格式化并修改逻辑分区大小，其中-l是你选的对应模式：\n1 nvme format /dev/nvmeXn1 -l 1 显卡驱动与桌面环境 archlinux 显卡驱动 | archlinux 简明指南 桌面环境与常用应用安装 | archlinux 简明指南 这里相比于原教程有比较大的出入，我使用的是Gnome作为默认桌面。Gnome对于高分缩放更加友好的同时界面比较好看，虽然Gnome的大而全完全就在ArchLinux的对立面，但给予用户选择大而全也是一种灵活自由吧。（跑\n软件安装的一些小调整 我将Aur管理的安装放到前面且改用了Paru，在启用archlinuxcn源后即可：\n1 2 sudo pacman -S archlinuxcn-keyring sudo pacman -S paru 再就是中文字体的安装可以调的更前面一点来避免gnome和浏览器出现方框字：\n1 2 sudo pacman -S adobe-source-han-serif-cn-fonts wqy-zenhei sudo pacman -S noto-fonts noto-fonts-cjk noto-fonts-emoji noto-fonts-extra Gnome和中文输入法 ArchLinux安装GNOME桌面 - Skyone Blog ArchLinux-GNOME的安装、配置和美化 - 简书 安装xorg\n1 sudo pacman -S xorg xorg-server xorg-xinit 安装gnome，其中gnome里面可以全装（你都选gnome了也不会太在乎这些基础功能是否精简干净了吧），但gnome-extra里面有大量没用的游戏、效率工具等内容，可以直接选择不装或者只挑有用的进行安装，一定一定要挑一下别学我直接一口气给我装了十个游戏。\n1 sudo pacman -S gnome gnome-extra 然后打开gdm就可以显示图形界面了：\n1 sudo systemctl enable --now gdm 安装完成后若在设置里面没有显示中文请确定按简明教程正确配置/etc/locale.gen后执行：\n1 sudo locale-gen 然后安装rime-ibus，选择ibus的原因是Gnome的窗口管理器基本和ibus输入引擎深度绑定，与其去折腾fctix的各种奇怪bug不如直接把朙月输入法的引擎引入ibus来的省心。\n1 2 sudo pacman -S ibus-rime sudo pacman librime-data-luna-pinyin Gnome的ibus无法通过正常的ibus-setup里的配置进行添加和编辑，也无法检查常规路径里面大的配置文件，且gnome输入法设置里的设置又少的可怜。以为ibus设置横向选词为例，根据这个帖子，正确的Gnome配套的ibus配置文件位于:\n1 ~/.config/ibus/rime/build/ibus_rime.yaml 打开这个文件后修改以下选项即可实现横向输入：\n1 2 style: horizontal: true 美化与完善 可选配置（基础篇） | archlinux 简明指南 语言与地区设置 简体中文本地化 - Arch Linux 中文维基 我们按照以上教程先配置一个英文的全局local来防止tty中的中文渲染错误，修改 /etc/locale.conf：\n1 LANG=en_US.UTF-8 然后分别编辑以下文件：\n~/.bashrc ~/.xinitrc ~/.xprofile 添加如下内容：\n1 2 export LANG=zh_CN.UTF-8 export LANGUAGE=zh_CN:en_US 中文字体完善 字体配置 - Arch Linux 中文维基 字体配置/中文 - Arch Linux 中文维基 接下来我们修改一下字体的配置，让默认字体更接近Android原生的字体风格。首先下载我们需要的字体，这里等宽字体我选择了新的Maple Mono，其可以将中文设置成拉丁字母双倍宽度来实现中英混合的情况下的等宽，比强行压缩汉字的更纱黑体效果好太多。其中如果maple mono系列如果遇到需要选择的情况请选archlinuxcn源。\n1 paru -S ttf-roboto noto-fonts noto-fonts-cjk adobe-source-han-sans-cn-fonts adobe-source-han-serif-cn-fonts ttf-dejavu ttf-maplemono-nf-unhinted ttf-maplemono-nf-cn-unhinted 然后我们修改~/.config/fontconfig/fonts.conf，以下是我根据配置建议写的Android字体配置，其中为了美观仍然选择的noto sans ckj sc为中文字体，并改用了maple系为等宽字体，这里也可以选择按上面网址里的配置修复Bug：\nu0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE fontconfig SYSTEM \u0026#34;fonts.dtd\u0026#34;\u0026gt; \u0026lt;fontconfig\u0026gt; \u0026lt;its:rules xmlns:its=\u0026#34;http://www.w3.org/2005/11/its\u0026#34; version=\u0026#34;1.0\u0026#34;\u0026gt; \u0026lt;its:translateRule translate=\u0026#34;no\u0026#34; selector=\u0026#34;/fontconfig/*[not(self::description)]\u0026#34; /\u0026gt; \u0026lt;/its:rules\u0026gt; \u0026lt;description\u0026gt;Android Font Config\u0026lt;/description\u0026gt; \u0026lt;!-- Font directory list --\u0026gt; \u0026lt;dir\u0026gt;/usr/share/fonts\u0026lt;/dir\u0026gt; \u0026lt;dir\u0026gt;/usr/local/share/fonts\u0026lt;/dir\u0026gt; \u0026lt;dir prefix=\u0026#34;xdg\u0026#34;\u0026gt;fonts\u0026lt;/dir\u0026gt; \u0026lt;!-- the following element will be removed in the future --\u0026gt; \u0026lt;dir\u0026gt;~/.fonts\u0026lt;/dir\u0026gt; \u0026lt;!-- 关闭内嵌点阵字体 --\u0026gt; \u0026lt;match target=\u0026#34;font\u0026#34;\u0026gt; \u0026lt;edit name=\u0026#34;embeddedbitmap\u0026#34; mode=\u0026#34;assign\u0026#34;\u0026gt; \u0026lt;bool\u0026gt;false\u0026lt;/bool\u0026gt; \u0026lt;/edit\u0026gt; \u0026lt;/match\u0026gt; \u0026lt;!-- 英文默认字体使用 Roboto 和 Noto Serif ,终端使用 Maple Mono NF.。--\u0026gt; \u0026lt;match\u0026gt; \u0026lt;test qual=\u0026#34;any\u0026#34; name=\u0026#34;family\u0026#34;\u0026gt; \u0026lt;string\u0026gt;serif\u0026lt;/string\u0026gt; \u0026lt;/test\u0026gt; \u0026lt;edit name=\u0026#34;family\u0026#34; mode=\u0026#34;prepend\u0026#34; binding=\u0026#34;strong\u0026#34;\u0026gt; \u0026lt;string\u0026gt;Noto Serif\u0026lt;/string\u0026gt; \u0026lt;/edit\u0026gt; \u0026lt;/match\u0026gt; \u0026lt;match target=\u0026#34;pattern\u0026#34;\u0026gt; \u0026lt;test qual=\u0026#34;any\u0026#34; name=\u0026#34;family\u0026#34;\u0026gt; \u0026lt;string\u0026gt;sans-serif\u0026lt;/string\u0026gt; \u0026lt;/test\u0026gt; \u0026lt;edit name=\u0026#34;family\u0026#34; mode=\u0026#34;prepend\u0026#34; binding=\u0026#34;strong\u0026#34;\u0026gt; \u0026lt;string\u0026gt;Roboto\u0026lt;/string\u0026gt; \u0026lt;/edit\u0026gt; \u0026lt;/match\u0026gt; \u0026lt;match target=\u0026#34;pattern\u0026#34;\u0026gt; \u0026lt;test qual=\u0026#34;any\u0026#34; name=\u0026#34;family\u0026#34;\u0026gt; \u0026lt;string\u0026gt;monospace\u0026lt;/string\u0026gt; \u0026lt;/test\u0026gt; \u0026lt;edit name=\u0026#34;family\u0026#34; mode=\u0026#34;prepend\u0026#34; binding=\u0026#34;strong\u0026#34;\u0026gt; \u0026lt;string\u0026gt;Maple Mono NF\u0026lt;/string\u0026gt; \u0026lt;/edit\u0026gt; \u0026lt;/match\u0026gt; \u0026lt;!-- 中文默认字体使用　Noto Sans CJK SC ,终端使用 Maple Mono NF CN。--\u0026gt; \u0026lt;match\u0026gt; \u0026lt;test name=\u0026#34;lang\u0026#34; compare=\u0026#34;contains\u0026#34;\u0026gt; \u0026lt;string\u0026gt;zh\u0026lt;/string\u0026gt; \u0026lt;/test\u0026gt; \u0026lt;test name=\u0026#34;family\u0026#34;\u0026gt; \u0026lt;string\u0026gt;serif\u0026lt;/string\u0026gt; \u0026lt;/test\u0026gt; \u0026lt;edit name=\u0026#34;family\u0026#34; mode=\u0026#34;prepend\u0026#34;\u0026gt; \u0026lt;string\u0026gt;Noto Serif CJK SC\u0026lt;/string\u0026gt; \u0026lt;/edit\u0026gt; \u0026lt;/match\u0026gt; \u0026lt;match\u0026gt; \u0026lt;test name=\u0026#34;lang\u0026#34; compare=\u0026#34;contains\u0026#34;\u0026gt; \u0026lt;string\u0026gt;zh\u0026lt;/string\u0026gt; \u0026lt;/test\u0026gt; \u0026lt;test name=\u0026#34;family\u0026#34;\u0026gt; \u0026lt;string\u0026gt;sans-serif\u0026lt;/string\u0026gt; \u0026lt;/test\u0026gt; \u0026lt;edit name=\u0026#34;family\u0026#34; mode=\u0026#34;prepend\u0026#34;\u0026gt; \u0026lt;string\u0026gt;Noto Sans CJK SC\u0026lt;/string\u0026gt; \u0026lt;/edit\u0026gt; \u0026lt;/match\u0026gt; \u0026lt;match\u0026gt; \u0026lt;test name=\u0026#34;lang\u0026#34; compare=\u0026#34;contains\u0026#34;\u0026gt; \u0026lt;string\u0026gt;zh\u0026lt;/string\u0026gt; \u0026lt;/test\u0026gt; \u0026lt;test name=\u0026#34;family\u0026#34;\u0026gt; \u0026lt;string\u0026gt;monospace\u0026lt;/string\u0026gt; \u0026lt;/test\u0026gt; \u0026lt;edit name=\u0026#34;family\u0026#34; mode=\u0026#34;prepend\u0026#34;\u0026gt; \u0026lt;string\u0026gt;Maple Mono NF CN\u0026lt;/string\u0026gt; \u0026lt;/edit\u0026gt; \u0026lt;/match\u0026gt; \u0026lt;!-- Windows \u0026amp; Linux Chinese fonts. --\u0026gt; \u0026lt;!-- 把所有常见的中文字体映射到思源黑体和思源宋体，这样当这些字体未安装时会使用思源黑体和思源宋体. 解决特定程序指定使用某字体，并且在字体不存在情况下不会使用fallback字体导致中文显示不正常的情况. --\u0026gt; \u0026lt;match target=\u0026#34;pattern\u0026#34;\u0026gt; \u0026lt;test qual=\u0026#34;any\u0026#34; name=\u0026#34;family\u0026#34;\u0026gt; \u0026lt;string\u0026gt;WenQuanYi Zen Hei\u0026lt;/string\u0026gt; \u0026lt;/test\u0026gt; \u0026lt;edit name=\u0026#34;family\u0026#34; mode=\u0026#34;assign\u0026#34; binding=\u0026#34;same\u0026#34;\u0026gt; \u0026lt;string\u0026gt;Source Han Sans CN\u0026lt;/string\u0026gt; \u0026lt;/edit\u0026gt; \u0026lt;/match\u0026gt; \u0026lt;match target=\u0026#34;pattern\u0026#34;\u0026gt; \u0026lt;test qual=\u0026#34;any\u0026#34; name=\u0026#34;family\u0026#34;\u0026gt; \u0026lt;string\u0026gt;WenQuanYi Micro Hei\u0026lt;/string\u0026gt; \u0026lt;/test\u0026gt; \u0026lt;edit name=\u0026#34;family\u0026#34; mode=\u0026#34;assign\u0026#34; binding=\u0026#34;same\u0026#34;\u0026gt; \u0026lt;string\u0026gt;Source Han Sans CN\u0026lt;/string\u0026gt; \u0026lt;/edit\u0026gt; \u0026lt;/match\u0026gt; \u0026lt;match target=\u0026#34;pattern\u0026#34;\u0026gt; \u0026lt;test qual=\u0026#34;any\u0026#34; name=\u0026#34;family\u0026#34;\u0026gt; \u0026lt;string\u0026gt;WenQuanYi Micro Hei Light\u0026lt;/string\u0026gt; \u0026lt;/test\u0026gt; \u0026lt;edit name=\u0026#34;family\u0026#34; mode=\u0026#34;assign\u0026#34; binding=\u0026#34;same\u0026#34;\u0026gt; \u0026lt;string\u0026gt;Source Han Sans CN\u0026lt;/string\u0026gt; \u0026lt;/edit\u0026gt; \u0026lt;/match\u0026gt; \u0026lt;match target=\u0026#34;pattern\u0026#34;\u0026gt; \u0026lt;test qual=\u0026#34;any\u0026#34; name=\u0026#34;family\u0026#34;\u0026gt; \u0026lt;string\u0026gt;Microsoft YaHei\u0026lt;/string\u0026gt; \u0026lt;/test\u0026gt; \u0026lt;edit name=\u0026#34;family\u0026#34; mode=\u0026#34;assign\u0026#34; binding=\u0026#34;same\u0026#34;\u0026gt; \u0026lt;string\u0026gt;Source Han Sans CN\u0026lt;/string\u0026gt; \u0026lt;/edit\u0026gt; \u0026lt;/match\u0026gt; \u0026lt;match target=\u0026#34;pattern\u0026#34;\u0026gt; \u0026lt;test qual=\u0026#34;any\u0026#34; name=\u0026#34;family\u0026#34;\u0026gt; \u0026lt;string\u0026gt;SimHei\u0026lt;/string\u0026gt; \u0026lt;/test\u0026gt; \u0026lt;edit name=\u0026#34;family\u0026#34; mode=\u0026#34;assign\u0026#34; binding=\u0026#34;same\u0026#34;\u0026gt; \u0026lt;string\u0026gt;Source Han Sans CN\u0026lt;/string\u0026gt; \u0026lt;/edit\u0026gt; \u0026lt;/match\u0026gt; \u0026lt;match target=\u0026#34;pattern\u0026#34;\u0026gt; \u0026lt;test qual=\u0026#34;any\u0026#34; name=\u0026#34;family\u0026#34;\u0026gt; \u0026lt;string\u0026gt;SimSun\u0026lt;/string\u0026gt; \u0026lt;/test\u0026gt; \u0026lt;edit name=\u0026#34;family\u0026#34; mode=\u0026#34;assign\u0026#34; binding=\u0026#34;same\u0026#34;\u0026gt; \u0026lt;string\u0026gt;Source Han Serif CN\u0026lt;/string\u0026gt; \u0026lt;/edit\u0026gt; \u0026lt;/match\u0026gt; \u0026lt;match target=\u0026#34;pattern\u0026#34;\u0026gt; \u0026lt;test qual=\u0026#34;any\u0026#34; name=\u0026#34;family\u0026#34;\u0026gt; \u0026lt;string\u0026gt;SimSun-18030\u0026lt;/string\u0026gt; \u0026lt;/test\u0026gt; \u0026lt;edit name=\u0026#34;family\u0026#34; mode=\u0026#34;assign\u0026#34; binding=\u0026#34;same\u0026#34;\u0026gt; \u0026lt;string\u0026gt;Source Han Serif CN\u0026lt;/string\u0026gt; \u0026lt;/edit\u0026gt; \u0026lt;/match\u0026gt; \u0026lt;!-- Load local system customization file --\u0026gt; \u0026lt;include ignore_missing=\u0026#34;yes\u0026#34;\u0026gt;conf.d\u0026lt;/include\u0026gt; \u0026lt;!-- Font cache directory list --\u0026gt; \u0026lt;cachedir\u0026gt;/var/cache/fontconfig\u0026lt;/cachedir\u0026gt; \u0026lt;cachedir prefix=\u0026#34;xdg\u0026#34;\u0026gt;fontconfig\u0026lt;/cachedir\u0026gt; \u0026lt;!-- the following element will be removed in the future --\u0026gt; \u0026lt;cachedir\u0026gt;~/.fontconfig\u0026lt;/cachedir\u0026gt; \u0026lt;config\u0026gt; \u0026lt;!-- Rescan configuration every 30 seconds when FcFontSetList is called --\u0026gt; \u0026lt;rescan\u0026gt; \u0026lt;int\u0026gt;30\u0026lt;/int\u0026gt; \u0026lt;/rescan\u0026gt; \u0026lt;/config\u0026gt; \u0026lt;/fontconfig\u0026gt; TCP调参 TCP 迷之调参 - 智能网络优化工具 估计玩过VPS的都多少了解过TCP调参这个事情吧。虽然大多数在服务器上可以有效提高吞吐量的设置在终端设备上就是浪费内存浪费电，但有些算法类的调整（例如bbr拥塞控制）还是能有效提高设备网络性能的。\n为/etc/sysctl.conf文件添加如下内容，主要是改变队列管理和拥塞控制算法其他都可动可不动：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # --- 笔记本网络与系统优化 --- # 使用现代队列管理算法，对抗缓冲区膨胀，降低延迟 net.core.default_qdisc = cake # 启用 BBR 拥塞控制算法以提升速度和吞吐量 net.ipv4.tcp_congestion_control = bbr # 启用 TCP Fast Open 减少连接延迟 net.ipv4.tcp_fastopen = 3 # 允许重用 TIME_WAIT 状态的连接 net.ipv4.tcp_tw_reuse = 1 # 连接空闲后更快地恢复传输速度 net.ipv4.tcp_slow_start_after_idle = 0 Gnome插件推荐 为了给gnome安装插件，首先需要安装gnome-shell-extensions和gnome-browser-connector，如果仍然无法安装请再安装对应浏览器里的插件。（和其他发行版不同不需要安装chrome-gnome-shell）\n1 paru -S gnome-shell-extensions gnome-browser-connector 以下是本人在用的一些插件：\nAppIndicator and KStatusNotifierItem Support ：恢复被gnome取消的托盘 Vitals: 清爽的硬件监控 常用软件 Linux 日常操作与基础知识 | archlinux 简明指南 防火墙 按照个人使用习惯安装ufw防火墙和其gui版本gufw并启动：\n1 2 3 paru -S ufw gufw sudo systemctl enable --now ufw.service sudo ufw enable 这个防火墙不用我多介绍了吧无论cli还是衍生的gui都是最简单的那一类了。注意放行一些类似LocalSend之类的传入请求即可，大多数时候拒绝入站能根本上解决一些公共网络中的安全问题。\nJava环境 Java - Arch Linux 中文维基 ArchLinux的Java充分考虑了Java生态碎片化的情况，准备了 java-runtime-common和java-environment-common包作为系统的Java环境管理工具，使得开发者可以在命令行切换目前使用的Java版本。\n我们先安装一个21版本的OpenJDK\n1 paru -S jdk21-openjdk 此时可以看到java-runtime-common也被作为依赖安装到了设备上，我们用命令查看一下目前支持的java环境：\n1 2 3 4 # archlinux-java status Available Java environments: java-21-openjdk (default) 可以看到我们所有的java环境和目前启动Java程序所使用的默认Java路径，后续我们只需要用：\n1 archlinux-java set \u0026lt;JAVA_ENV_NAME\u0026gt; 就可以切换目前使用的Java环境了。\nintellij-idea系IDE的安装 我们可以在AUR里安装几乎全部的jetbrain公司的产品，但是安装后直接点击桌面图标是无法启动的（演示以webstorm为例）：\n1 paru -S webstorm 此时在电脑中已有Java环境的情况下前往安装目录寻找启动脚本并执行。该脚本可以在没有jetbarin的jre的情况下用默认Java环境打开对应IDE。\n完成初始化后，我们在主菜单使用Ctrl + Shift + A快捷键搜索选择IDE的启动Java运行时（中文）或者Choose Boot Java Runtime for the IDE（英文），在新建里面随便下载一个（首次安装）/选择上一个IDE已经下载好的路径即可。\n其他常用软件 视频：Vlc播放器 paru -S vlc vlc-plugins-all 图形化文本编辑器：Visual Studio Code paru -S code 办公三件套：LibreOffice paru -S libreoffice-fresh libreoffice-fresh-zh-cn 或者 paru -S libreoffice-still libreoffice-still-zh-cn 录屏/直播：OBS paru -S obs-studio ","date":"2025-08-19T00:00:00Z","image":"https://img.takuron.com/20250827/fd891f4ceba3bd23434784b7077c9044.webp","permalink":"https://takuron.com/post/id0032/","title":"ArchLinux折腾记录01：安装"},{"content":"随着科学计算和机器学习的发展，编程和计算机软件使用已经几乎融入了几乎每一个理工商医科学生的学习中。这些软件给同时做过软件开发的跨专业人才来说，这种体系确实成功使用软件工程的轮子为他们解决了大问题，但这可苦了使用这些工具的学生。每当看他们用着记事本复制粘贴C某DN的代码后用微信互相发送的时候，我真的觉得应当让他们感受并掌握早已体系化工业化的软件工程的基础工具了。\n本文将基于Github只讲最最最基础的Git使用方法，目标是让非程序员快速上手这一套版本控制系统的基础功能改善编码体验，如有错漏欢迎指出。本文注重基础概念的讲解，但和其他教程不同的是虽然也会给出程序员常用的命令，我本人非常鼓励使用者寻找一个合适的图形化工具进行Git操作，本文将以Github Desktop为例进行演示。\n但要注意有些客户端会简化点命令行的部分概念，例如本教程的示例客户端就简化掉了add操作，所以还是烦请看一下理论基础以真正掌握基本的概念。（早知道用idea系自带的那个了，用pycharm的人还多）\n写在前面 Git和Github？ 虽然现在具有私服的游戏越来越少，但我相信你多少见过类似Minecraft、CSGO、方舟生存进化这种具有私服的游戏，你可以单机玩、连官服玩、或者加入你朋友创建的服务器，而Git也是类似的一个软件。Git本身是一个本地的工具软件，就像你玩过的那些可以单机可以联机的游戏一样，他可以不需要依赖网络或者特定的服务器来独立运行；而Github则是一个代码托管平台，相当于这些游戏里体量大的服务器或者官服，大多数情况下你会用他来存放你的仓库，但没有Github你也可以将你的代码仓库放在本地或者其他服务器（Gitlab/Gitee等）上面。并且软件本身的基础操作是相同的，就像你大多数时候不需要因为换了游戏服务器而需要学习新的游戏操作方法一样。\n注册Github 如果你身处中国大陆地区请准备好魔法上网的工具，虽然理论没有被彻底屏蔽但考虑现在的网络质量请保证注册过程中时刻具有连接国外网站的能力。\n进入Github官网后直接点击右上角的Sign up填写信息即可，请记住你的密码，后面要用。\n版本控制与Git的思路 什么是版本控制 大多数人无法一次性解决一个终极问题，大到各种科学理论、工程项目、日常家务这些工作大家大多数时候都遵循的是执行-改进的流程,，这个过程涉及大量的更改尝试甚至多人合作的拆解和合并。这时你的每一个阶段都会有一个或好或坏的阶段性成果，这就是我们说的广义的版本，而版本控制就是如何管理这些阶段性成果的工程实践，例如以下梗图就是一个最失败的版本控制：\n版本控制的思维不止仅限于软件工程和Git、如何做好一个项目的版本控制是管理任何项目的关键。一个好的版本标注、存储、同步、分叉会让你的项目管理事半功倍，而Git则是一个很优秀的解决方案供大家参考。\nGit的诞生和思路 2005年，Linux系统使用的版本控制工具BitKeeper突然转向收费，在市场上没有更加合适的版本工具的情况下Linus Torvalds（Linux之父）用10天时间从零手搓了Git，其核心思路包括：\n分布式架构：任何协作者本地都有一个完整的全量仓库，虽然设计了完整的向线上提交的系统，但你总是可以在本地获得整个仓库完整的记录。 基于指针的全量快照：Git总是能直接保持任何提交时刻的完整状态，就像照片一样，拍下即定格。你任何提交时候每一行代码和文件的完整内容、这些内容的创建者和他们的邮箱随时都可以查到。 任意的版本标注、管理和分叉：有大量的工具可以帮助你管理这些快照之间的状态，你可以随时将你的代码返回任意这些快照的时候。同时这些照片绘相当于自带修图，类似于画画一样，你可以随时重新编辑其中的一部分元素或者合并两幅画里面的小饰品，或者为其中的人物画一个新的表情，你可以像拼积木一样随时装上或者拆除一部分而不影响其他任何东西。 你需要知道的概念 远程仓库、本地仓库、暂存区与工作区 为了实现版本控制，git对处于不同阶段的代码准备了不同的存储状态。首先版本控制本身不应该干扰任何实际进行的编码，保证能够应对任何项目结构（也就是你存储代码的整个文件夹），这个不干扰你正常编码的代码存储区域叫工作区（Working Directory）。不过并不是每个文件都需要放在git仓库里存储，就像你会把要发送的快递放在门口但快递员不能直接抓起你家鞋柜就跑一样，你需要告诉快递员什么是需要发走的，这就是提交到暂存区（Staging Area）。\n接着就是和本地仓库的交互，本地仓库（Repository） 正如它的名字和我们前面所讲的概念，它存储着历史以来这个项目里所有代码修改的历史且不可随意变更修改删除，你只能向其提交和获取代码（这两个操作本身后面再讲）而不能直接对其修改，就像现实的物流仓库出入东西都会被登记一样。远程仓库（Reomte Repository） 则是为云端存储和多人协作设计的，每个协作开发的人都可以与远程仓库进行交互来保证自己的代码最终存储并可以随着他人的同步最终进入别人的工作区来实现协同开发。\nAdd、Commit和Push 为了让你写的代码在上面几个区域之间流动我们需要定义一些操作，首先你需要让你新建的文件被包含在git的管理中，我们叫这个操作为add。例如在大多数情况下我们会用如下命令直接一次性添加所有文件到暂存区中：\n1 git add . 如果你的项目有一些编辑过程和结果文件不需要被添加到仓库中，我们可以使用.gitignore配置文件来直接自动忽略这些，具体会放在实际操作部分讲解。\n为了把暂存区的代码归入仓库中，我们需要将本次的修改打包提交。就像快递员相比于处理你箱子里的东西只会看你的快递单一样，你需要将目前为止的修改装一个盒子并给出一个相当于快递单的说明，这个过程我们叫做commit。我们的代码仓库就是由一次次commit组合而来的，编写清晰、规范的commit message（提交说明）至关重要，因为它能帮助你和协作者在未来快速理解每次变更的目的和内容。最简单的commit命令为：\n1 git commit -m \u0026#34;提交说明\u0026#34; 当然你也可以不在这里写说明，前提是你知道并且会使用你命令行的默认编辑器。但是如果你知道我在说什么并且会用vi/vim大概率是不需要看这个教程的。\n当然，你也可以抛弃已经修改的代码来快速回到上一次commit保存的状态，一般我们会使用reset回撤已经被add的文件、checkout回撤暂未增加的文件。\n最后是同步本地和远程仓库的操作，将目前本地增加的更改提交到远程仓库的方法叫push，将已经提交到其他仓库的已经打包完成的内容从远程仓库同步下来的方法叫pull。这些方法足够让你将你已经写完的代码放在云端储存和开源共享。\n在实际多人协同开发中会遇到两个人或者分支同时对一个文件进行修改的情况而产生冲突（Conflict），本教程作为最简入门不会专门讲解冲突相关，这部分内容等你用熟了自己就会处理了。\n时间线和分支 前面我们提过了仓库是由一个个快照（不同时间项目文件定格的状态）组成的，然后知道了这个快照本身和建立的方式叫commit。就和电影里面的镜头一样，这些commit会根据时间排列起来（在暂时不考虑分支的情况下）形成一条直线，这就是时间线。每一个项目无论如何都会有一条主线分支（一般叫做master/main），你所做的就是随着时间可开发的进行推进这条线并且留下开发重要节点的记录。\n为了适应更加复杂的软件工程的情况，Git还提出了分支（Branch） 的概念。想象这样一种情况，你开始了一个新的大版本的开发，代码改到一半旧的版本出现了重大问题需要立即修复，但你的新功能代码都写了一大片了。或者你需要做一些实验性功能，但不希望很早就推送给正式用户，包括多人协作的时候有的时候并不是希望及时同步所有其他人开发的代码。这时候你就可以单独为自己新建一个时间线来专注于你新的功能的处理，创建其他分支的方法我们叫分叉（Fork），他会基于你现在的分支状态分出一个独立的新时间线供你处理，就像Galgame遇到对话选项一样。当你分支出来的东西确定无误要加入主线的时候的操作我们叫做合并（Merge）。\n其他你遇得到的操作 并非所有的仓库都是从零搭建起来的，你有的时候需要把目前仓库的状态从远端完全拉取，这个过程叫做克隆（Clone），克隆会在本地完全重新建立一个与目前远端仓库的状态一模一样的本地仓库和暂存区方便你直接开始代码。\n实际操作 第一次commit 这里以以Github Desktop为例示范如何从零开始建立一个自己的仓库和复制别人的仓库，请确保你已经处在魔法上网的状态下下载并登录Github Desktop，登录成功后会看到你账号里所有仓库（你可能什么都没有）。\n登录好后让我们进入网页端，点击账号旁边的加号，new repository。大部分选项都已经自带/附带了解释，这里主要说一下最下面三个选项的用途。第一个是是否要用一个README.md的文件来初始化你的仓库，相当于GitHub帮你进行一次基础的文件创建和提交来初始化整个仓库。请在这里选上可以偷懒跳过自己创建提交git仓库的过程，并且这个文件的内容会显示在你仓库的首页来作为给别人公开预览你仓库的说明书。第二个是是否要（根据模板）创建一个gitignore文件，这里你可以搜索一下你的项目对应的名称，根据上文根据这个模板可以保证大多数非源代码的内容被上传到git来节约空间，根据你的项目实际情况选择。最后一个是你希望使用的开源协议，如果选择会根据你选择的协议模板自动创建一个LICENSE文件来使用对应的开源协议，这个内容不在今天的讨论范围如有兴趣可以自行研究。\n这里过一会儿项目创建好后就可以在网页看到你的项目git链接，刷新客户端也可以在客户端内看到了。\n接下来我们选择Clone这个项目，客户端会自动填写我们上面网页获取到的Git仓库链接并在你选择克隆目标位置后开始克隆文件，如果是cli/其他客户端你需要将这个链接提交给给软件来实现克隆，克隆成功后即可进入主界面。\n这个界面主要需要关注的只有上面的三个选项和侧边栏的修改和提交。上面三个按钮的作用分别是切换目前的仓库、切换分支（初步操作暂时不会涉及）和与远程同步。而侧边栏的change则是可以显示你目前工作区已经进行的修改来方便你提交/回滚。这里我们先创建一个文件，可以看到我们创建的文件已经自动进入了暂存区并且等待我们提交，注意这里Github Desktop简化掉了add操作，cli或者其他可视化客户端请先将文件add到暂存区。我们为这次提交写一下summary来概括一下这次修改的内容然后commit到main分支。\n然后上方第三个按钮就变成了push来提醒你将目前本地仓库的内容提交到网上，我们可以攒几个commit再推送或者直接推送，我们直接推送然后到网页查看就可以看到我们新提交的文件了。\n修改和回撤 接下来我们对文件进行一次修改并假设修改错误的情况下回撤目前的修改。我们先编辑一下README来制造修改。\n回到Github Desktop，我们可以发现暂存区的修改已经显示，你可以按照上一节的方法再次提交，但这次我们选择右键，discard change并确认。这样的话暂存区的内容就会被丢弃，指定的文件就会回到你上一次commit时候的状态。这对你修改现有内容结果导致无法恢复的严重错误有非常大的帮助。\n拉取 我们再模拟多台设备/别人一起开发的情况，这里我们现在网页对文件进行一下修改（网页上对文件的修改也是一次commit）。\n此时Github中的仓库应当已经被修改但本地并未跟进，此时你可以回到客户端，选择Fetch origin。此时GitHub Desktop就会检查到可以从远程仓库拉取修改，对应按钮变成Pull，选择就可以把你在线进行的修改拉取到本地了。\n分支别人的仓库和pull request 最后讲讲如何快速分（chao）支（xi）别人的代码，对于其他公开的仓库如果你需要学习研究他们的代码你可以通过点击左上角的Fork来使用Github的Fork功能，填写基础信息后等待一段时间你就有了一个以你为管理员的新代码仓库了，你可以克隆下来任意使用修改。\n如果你觉得你的修改很好想提交给原作者怎么办呢，你可以在把修改提交到自己仓库后选择contribute中的open pull request，填写好说明就可以申请将你的修改并入原仓库了。\n总结 恭喜你！通过阅读本文，你已经了解了Git和Github的核心概念，并通过Github Desktop实际操作了版本控制的基本流程，包括创建仓库、提交更改、同步远程、回撤修改、复刻他人仓库以及发起Pull Request。记住，版本控制不仅仅是程序员的专属技能，它更是一种高效管理项目、追踪历史、促进协作的思维方式，无论你的专业背景如何，掌握它都将为你的学习和研究带来便利。\n","date":"2025-05-23T00:00:00Z","image":"https://img.takuron.com/20250827/19ef1f788b216385031c72e006deb649.webp","permalink":"https://takuron.com/post/id0031/","title":"面向非码农的Git速成教程"},{"content":"在之前使用Paru更新的时候遇到任何网络连接问题我都直接开开开全局劫持代理就完事了。这次是由于我自己用的小猫咪版本更新导致TUN模式的系统服务老是有问题无法使用才发现的一个错误，我在使用paru更新AUR的PKGBUILD时候爆出了这样的错误：\n1 致命错误：无法访问 \u0026#39;https://aur.archlinux.org/vscodium-bin\u0026#39;：TLS connect error: error:00000000:lib(0)::reason(0) 首先还是系统代理开开开，看到仍然报错后还怀疑过paru无法正常读取自动设置的系统代理故而尝试手动设置命令行代理/尝试更换yay更新均无效。仍然同样报错，一度怀疑系统时间和本地证书问题，百思不得其解。\n思索的时候重新审视报错日志发现卡在的位置实际是从aur.archlinux.org克隆PKGBUILD的时候，这个过程正常是使用git的，实际报错的为如下指令：\n1 git clone --no-progress -- https://aur.archlinux.org/vscodium-bin 如果使用git那我给git手动设置了代理服务器，这样就能解释的通为什么错误不会因系统代理而变化，重新审视了我的git的配置文件（~/.gitconfig ）：\n1 2 3 4 [http] proxy = socks5://127.0.0.1:7897 [https] proxy = socks5://127.0.0.1:7897 仍然没有问题，尝试验证性的从github克隆库没有问题，再尝试用设置同样代理的Firefox打开aur.archlinux.org网站也没有问题。也就是说问题准确定位是git无法在通过代理的情况下验证特定网站（aur.archlinux.org）的TLS证书？\n重新以git代理\\TLS错误联合aur等关键词搜索，看到了在与clash配合使用的情况下有些机器在git使用socks5代理会存在问题，故尝试将代理改为http，修好了：\n1 2 3 4 [http] proxy = http://127.0.0.1:7897 [https] proxy = http://127.0.0.1:7897 ","date":"2025-04-06T00:00:00Z","image":"https://img.takuron.com/blogpost/zvl9yfrxzfmh.webp","permalink":"https://takuron.com/post/id0030/","title":"关于我AUR无法更新最终定位到git代理设置的事情"},{"content":"IPv6（Internet Protocol Version 6）是网络层协议的第二代标准协议，也被称为IPng（IP Next Generation）。它是Internet工程任务组IETF（Internet Engineering Task Force）设计的一套规范，是IPv4（Internet Protocol Version 4）的升级版本。随着国内大力推进IPv6网络的建设，目前启用IPv6与IPv4的双栈网络可以在不影响网络质量的同时获得具有公网IPv6的诸多便利，这里专门介绍一下如何在国内家宽条件下在OPNsense中配置IPv6网络。\nIPv6基础：为什么应该使用IPv6 本人不是猫在机房的运维，这里主要介绍家用环境有用的实践内容和也许可能大概有用的个人理解，如有错误欢迎批评指正，更多详细的基础理论可以看这里： IPv6基础 曹世宏的博客。\n很多人都知道IPv6具有的巨大的地址空间及其带来的公网IP不要钱，但IPv6并不只是IPv4++，比起地址空间扩大更重要的是整个协议的技术细节都进行了升级，就说对我们使用来说最重要的，其配网难度和效率都获得了提升，且一些IPv4的常见问题也获得了一定程度的解决。个人觉得最重要的其实是其自动配置和去中心化理念。\nIPv6地址在小规模网络中大部分都可以通过SLAAC(Stateless Address Autoconfiguration，无状态地址自动配置)来获得，而这个过程本身的底层逻辑是终端设备自行声明检测冲突，不需要繁杂的手动配置或者DHCP通告。很多人会注意到即使在纯IPv4的网络中也会在Windows设置里看到一个IPv6地址，这就是在你网口本身启用了IPv6协议栈后尝试通过NDP（Neighbor Discovery Protocol，邻居发现协议，用于代替IPv4的ARP协议和ICMP路由发现）获取全球唯一地址的同时先行声明的链路本地地址。这个地址无需任何网关或者其他二层设备，而且由于无状态地址的声明机制和乐观DAD（Duplicate Address Detection，地址重复性检测）的存在，只要没有收到其他设备发送的ip冲突的邻居通告那么终端设备就会自己完成这个简单地本地链路建立，此时如果有其他设备与其同处一个二级链路他们之间的网络就已经自动配好了（本地链路地址根据MAC地址生成，很难冲突）。\n至于公网地址同样可以不依赖传统的静态配置或者DHCP，路由器在通过NDP建立路由表的同时会进行路由器通告，若选择只使用无状态网络则只需要路由器通告默认路由地址和网络前缀即可。在无状态网络下客户端会根据路由器获得的前缀（类似IPv4的网段）自动生成至多3个IPv6地址并进行DAD后即可使用，无需路由器的更多干预。这种无状态的配网可以说解放了小规模网络里面路由器的大量任务，客户端本身就能独立自动配置大量信息有效的提升了组网能力。\n而且最重要的是，这些并不是强制的换代。IPv4和IPv6的双栈网络可以同时保证兼容性和利用上新的特征，且在管理要求更高的企业那位中你仍可以选择DHCPv6和NAT这些传统的管理技术。至于其他的类似更简洁灵活的报头、自动检测链路MTU同时解决v4分片的问题、更强大的组播和更好的移动网络支持之类的，老顽固们不关心也不在乎，毕竟对他们来说问题只有不安全和麻烦。\nOPNsense中为家庭网络配置IPv6 默认最佳设置 其实这个设置在第一篇中已经基本配置完毕了，这里的设置基于山东联通家宽。\n首先在接口/wan口获取可供分配的前缀，这里一定要勾选的只有使用ipv4连接获取，请求前缀长度在国内家宽会被直接无视可以不用设置，委派的前缀也是从56bit到直接不允许继续委派的64bit参差不齐，如果需要设置可以照着后面获取到的前缀长度来设置。\nlan口的IPv6设置为跟随wan口且允许手动调整DHCPv6和服务器通告。\n然后我们打开服务，路由器通告设置。这里路由器通告的设置类型详细可以直接参考官方的注释，如上文所说，家用环境中直接只启用SLAAC即可，因为像Android这种消费级设备据称很多根本就不支持DHCPv6。然后为了简洁这里直接取消选择使用DHCPv6的dns设置。\n这里为IPv6配置再设置一下DNS，其实对于双栈网络来说设置IPv6的DNS服务器不是必须的，通过IPv4的DNS查询也可以获取AAAA类型的解析来进行IPv6访问。打开AdGuardHome，找到设置这里的设置向导，这里显示了所有AdGuardHome绑定的接口ip，这里可以记下pppoe接口的本地链路地址设置给IPv6通告。\n再次查看AdGuardHome的日志可以看到已经有来自IPv6的查询记录。\nDHCPv6的设置 当然你依然可以选择传统的DHCPv6，先讲直接分配公网前缀的方法。当你按照上述的wan口拨号配置正确获取到了IPv6前缀且lan口正确跟随后，打开服务/DHCPv6可以看到你获取的前缀。此时只需要设置子网可分配范围和前缀委派范围就好了。前者类似DHCPv4，后者则允许下面的路由器继续获取子网前缀，所有这些设置只需要设置后缀的范围就可以了，前缀会根据wan口获取的产生变化，按照IPv6简写方法省略即可。\n同时你也可以选择设置为局域网地址，这里我们回到lan口，修改IPv6为静态，然后从IPv6的内网地址段选取一段作为局域网地址。此时可以看到DHCPv6也会跟随变化，此时就可以使用IPv6的局域网地址了。\n不过不太推荐这样设置，自动配置的本地链路地址已经能满足大多数情况家用局域网的局域网互访需求了。这样为了保留IPv6公网能力还需要配置NAT转发或者NPTv6来做和公网地址前缀的映射，这里我不太需要就不详细演示了。\n","date":"2024-12-29T00:00:00Z","image":"https://img.takuron.com/blogpost/KABjvaXbhSmWkCg.webp","permalink":"https://takuron.com/post/id0029/","title":"OPNsense使用记录03：IPv6网络配置"},{"content":"为了更好的管理家庭网络，我们可以为OPNsense添加更多类型的软件来实现更多功能。\n添加第三方软件源 首先为了开启第三方源我们要启动ssh，这个选项可以在系统/设置/管理里面启用安全shell（不建议持续打开，在配置完成后建议关掉）。\n然后用你服务的的ip登录ssh，这里我选择的是Windows11自带的终端界面，PowerShell里面提供了ssh的登录程序我们直接敲命令登录即可，用户名密码即为你安装的时候的用户名和密码。\n输入如下命令：\n1 fetch -o /usr/local/etc/pkg/repos/mimugmail.conf https://www.routerperformance.net/mimugmail.conf 然后更新缓存\n1 pkg update 此时打开系统/固件/插件里面搜AdGuardHome，如果有显示即说明mimugmail源添加成功。\n启动AdGuardHome AdGuard Home 是一款全网广告拦截与反跟踪软件，安装在路由器后即可充当dns服务器对整个网络（通过dhcp设置dns）的设备的dns请求进行处理和广告过滤。\n首先在上面那个界面点击加号安装AdGuardHome，下载完成后刷新网页，如果能在 服务 里面看到AdGuardHome即为安装成功。\n在启用AdGuardHome之前我们先关掉自带的Unbound DNS，这样我们就可以直接让AdGuardHome监听53端口了。打开服务/Unbound DNS/常规，取消启用（这里我顺便给了个其他端口免得出奇怪问题）。\n此时启用AdGuardHome，浏览器打开 你的网关ip:3000 的网页，就可以开始进行常规AdGuardHome配置了。\nAdGuardHome个人配置 AdGuardHome网上的各种教程就比较多了，这里就简单分享下个人的配置方式。注意以上规则是适用于局域网dns分发的规则，自建dns服务和终端设备使用的契合度请自行设计。\ndns上游这里我选择了思科的OpenDNS并且直接ip访问DNS over https，其没有污染、支持EDNS的同时访问速度亲测在国内还算过得去，不过为了提高效率建议手动拉大缓存容量并且开启乐观缓存（你不开很多上游实际也是乐观缓存，所以开就行了）,然后选择了阿里和DNSpod做后备,启用EDNS提高查询准确性。实测在乐观缓存条件下响应时间整体在50ms以内。\n更多DoH服务器列表可以参考下这个帖子\n广告过滤规则我选择的是217heidai/adblockfilters中的DNS拦截版本，只用开启这一个就好了。\n","date":"2024-11-27T00:00:00Z","image":"https://img.takuron.com/blogpost/KABjvaXbhSmWkCg.webp","permalink":"https://takuron.com/post/id0028/","title":"OPNsense使用记录02：第三方软件源和AdGuardHome配置"},{"content":"自从去年受够openwrt各种插件之间的兼容性问题和遭遇了n5105小包总线速度问题导致的系统崩溃之后转向了OPNsense系统。作为一个专业的开源防火墙，其中文资料却少得可怜，去年第一次装的时候就准备全程记录一下配置的过程，一直因为时间问题没能实现。到了现在软路由硬件都换了一遍，结果再装还是资料少的可怜频频踩坑，故开坑记录一下，免得我自己也天天往一个坑里跳。\n前置条件 能选择这个系统的应该对软路由硬件挑选已经有自己的见解了吧，OPNsense 是基于 FreeBSD 的开源防火墙系统，理论上有驱动的硬件你随便选就可以。这里本人使用的是畅网n100的四网畅想版ddr4的版本来安装，并不是什么高性价比的东西单纯偷懒。内存为8g，硬盘则是用了一个傲腾16g，反正不记录log只装系统我就没见过用爆的，本身量大寿命又长，除了强制要有m.2口外其实很适合做这种工控机的系统盘。\n这里可以查到官方的硬件要求。\n你可以在这里下载到OPNsense，下载类型选择amd64和dvd，镜像国内选北京大学的即可。下载好后可以直接用rufus写入u盘安装。\n系统安装 因本人没有采集卡并且不喜欢拍屏，故本节非web界面的截图均来自b站@狐狸Nomad，顺便感谢大佬的指南。\n从u盘启动，一直跑马直到出现“Press any key to start the configuration importer: \u0026hellip;”。不用管。\n等到跑马出现“Press any key to start the manual interface assignment”的时候，你可以点击任何键来配置接口，在这里你可以手动配置一下wan口和lan口。但由于OPNsense的逻辑和openwrt不太一样这里的lan口只能配置一个，我倾向于直接跳过回头webui里面配置。如果你需要改可以按提示设置一下lan和wan对应的网口，其他选项除了最后保存全都直接回车跳过即可。\n然后就提示登录了，这里我们可以看到OPNsense为我们启动了一个体验版的系统，你可以连接lan口来体验。这里我们登录安装账号来开始安装到本地，在24.7版本安装账号名为installer,密码opnsense。\n登录后就进入了安装界面，选择默认键盘布局。\n选择安装的硬盘分区格式，现在默认就是ZFS选择就可以了。\n选择冗余模式，你可以在这里给系统做软raid，这里一块盘选stripe。\n选择安装的硬盘\n然后就开始安装了，安装结束后会显示这个界面，建议在这里修改一下root用户的密码，回头你需要用这个密码登录管理界面。\n重启，然后等待到提示登录时按照显示的lan口和网关地址打开浏览器就可以看到登录界面了（ssl证书错误请直接了解详细，仍要访问即可）。登录用户名为root，密码为你上一步设置的密码。\n然后就可以接上wan口开始配置了。\n基本配置 初始化 初始化其实按照引导一步步设置即可，首先设置时间和时区，这里可以改成阿里的btp服务器也可以不动。\n设置主机名、dns和语言，这些我们都不用动后面会用AdGuardHome。\n这里有一个图少截了，会问你WAN口的类型，我这里还没插网线直接选的pppoe但没给账号密码，如果上一步你接上了网线可以这会儿就配置了。\n设置LAN ip和网段，选一个自己喜欢的局域网网段即可。这里我写错了网关地址应为172.24.0.1。\n然后机器就会重启，初始化就基本完成了。\n启用所有LAN口 pfsense和OPNsense的第一个坑就是他们的接口（interface）都只能实际绑定一个物理网口，如果需要给几个网口做默认桥接就要每个网口单独设置一个没有网络的接口，然后用网桥连接这些接口后绑定在LAN上。这和openwrt的习惯是不一样的。\n我们现在就来把我这个机器的igc1/2/3设置成互相桥接的LAN口，目前我已经给igc1在安装的时候设置成了机器的LAN，所以我们献给igc2/3建立一个网桥。先建立两个接口，分别绑定物理的网口2/3并启用，不需要任何ip设置。\n然后我们建立网桥，在接口/其他类型/网桥里面点一下加号，将刚才新建的两个接口加进去。\n进入我们原先的LAN接口，把LAN接口改成我们新建立的网桥，保存。（注意所有的接口配置都需要二次选择应用才能生效）\n接入网口2/3，再将已经释放的igc1同样的创建接口并加入网桥即可。\n防火墙初步 以上述方法设置的LAN口虽然都可以正常访问网络，而且我们实际做局域网DHCP和NAT的“LAN”接口的规则是进出全部放行，但由于我们引入了新的接口，而这些接口的默认规则是放行出口禁止进口，这样会导致局域网下设备无法互相访问。\n我们点开防火墙/规则，随便选择一个lan口，加号新建规则，这里我用最简单的方法先放行了所有LAN网络下的主机的入站，这样可以把最需要解决的局域网互相访问先处理好，后续感觉应该修改掉LAN口的全放行来控制流量更符合家用的环境。记得保存完规则后刷新让防火墙生效。\n拨号、DHCP和IPV6初步 我们转回到接口WAN，这里以山东联通普通家用有v6的环境为例进行拨号和通过上级路由分配ipv6地址。PPPoe设置非常的简单，只需要在这里写你宽带的用户名和密码就行。\n然后是ipv6，拖到最底下可以看到DHCPv6客户端的设置，这里比较重要的是使用ipv4连接和仅请求地址前缀（request prefix only）必须打开。前缀委派大小和发送前缀大小这俩开与不开意义不大反正会被运营商美美无视。\n在LAN口中打开允许手动调整DHCPv6和路由器通告。\n此时打开服务/DHCPv6，如果宽带能正常获取ipv6前缀应该可以看到分配的网段，长度从56bits到64bits不等，说明获取ipv6前缀成功。（不过先不要用DHCPv6，我们现在先用SLAAC分配v6更加方便快捷）\n我们打开服务/路由器通告，将通告模式设置成unmanaged仅使用SLAAC分配ipv6，这样最基本的拥有ipv6地址就做到了，后面我们会更详细的设置DHCPv6。\n同一级菜单下还可以改变DHCPv4的设定，最需要设置的可能是类似我这种给了更大的局域网网段，这种情况下DHCP可选的ip范围还是不够使用的话可以手动选择范围。\n更新 备份 杂项 转到系统/固件/设置，这里可以先把更新源改成国内的，然后保存返回状态进行更新。\n系统/设置/其他里面可以修改主页温度传感器的温度源，志强用户还可以开启硬件加速。\n系统/设置/任务里面可以为系统设置定时任务，这里我让他每周重启。\n最后我们可以吧已经配置好的配置文件下载下来，这样出现问题直接上传配置文件即可恢复全部设置了。\n结束\n最后吐槽一下国内折腾软路由的，表面说支持开源和稳定，实际用着各种高大全魔改TUN的固件，为了开个魔法上网拒绝一切技术进步，ipv6这些和全局魔法冲突的统统全杀了还是避免不了不同模块打架出奇葩问题。你要和他说起稳定转头就投了有黑历史的闭源ikuai，就这样还热衷于all in boom建议两个全都真是系统简洁明了稳定。\n我个人不喜欢纯粹的全局代理，因为没有一个固定的规则让我满意能完成我的一切需求，毕竟人的需求也是会根据实际情况变动的。个人还是更喜欢细化的给每个需要分流的软件单独设置代理，浏览器直接用两个，这种手动分类才是效率最高的。\n","date":"2024-11-16T00:00:00Z","image":"https://img.takuron.com/blogpost/KABjvaXbhSmWkCg.webp","permalink":"https://takuron.com/post/id0027/","title":"OPNsense使用记录01：安装与基本配置"},{"content":"背景介绍 Intent对象传递与序列化 为了在Android各大组件之间通信跳转，Intent是最常用的通信手段。其中我们可以在其中的extra里面添加一些简单数据随其传递到下一个组件。为了向其中写入对象数据，我们需要将对象转变成可以保存和传输的二进制格式，即序列化过程。Android Intent允许传递继承Serializable和Parcelable的可序列化对象。 Serializable为Java原生的可序列化接口，只需继承自空的Serializable接口即可实现整个对象的序列化，但其序列化的实现使用了Java的反射机制且会对整个类的全部数据进行序列化，效率非常低。Parcelable则是Android专门设计的序列化接口，其需要自行实现序列化和反序列化的方法，其优点自然是整体效率可以接近十倍于Serializable，缺点自然是实现的时候需要写大量格式化的代码，以下是java中的一个例子：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 static class Skill implements Parcelable { String name; boolean programmingRelated; Skill(Parcel in) { this.name = in.readString(); this.programmingRelated = (in.readInt() == 1); } @Override void writeToParcel(Parcel dest, int flags) { dest.writeString(name); dest.writeInt(programmingRelated ? 1 : 0); } static final Parcelable.Creator\u0026lt;Skill\u0026gt; CREATOR = new Parcelable.Creator\u0026lt;Skill\u0026gt;() { Skill createFromParcel(Parcel in) { return new Skill(in); } Skill[] newArray(int size) { return new Skill[size]; } }; @Override int describeContents() { return 0; } } Kotlin的优化 Kotlin原生引入了data class，并且得益于gradle强大的插件系统。这解决了上面Parcelable接口最大的缺点，我们可以用插件快速为开发中常用的data类实现Parcelable序列化方法，首先在build.gradle里引入插件：\n1 2 3 plugins { id(\u0026#34;kotlin-parcelize\u0026#34;) }\u0026#34; 然后对需要实现Parcelable接口的数据类使用注释即可：\n1 2 3 4 5 6 @Keep @Parcelize data class PaoModel( val pao_name: String, val pao_url:String ): Parcelable API33的改动 Api33以前无论读取那种序列化对象都是直接根据key来获得对象后强转：\n1 2 val a:A = activity.intent.extras?.getParcelable(\u0026#34;key1\u0026#34;) val b:B = activity.intent.extras?.getSerializable(\u0026#34;key2\u0026#34;) 但这样是类型不安全的，为了解决这个问题，Api33以后弃用了上述的方法，改为：\n1 2 val a = activity.intent.extras?.getParcelable(\u0026#34;key1\u0026#34;,A::class.java) val b = activity.intent.extras?.getSerializable(\u0026#34;key2\u0026#34;,B::class.java) 问题现象 在实际开发中我使用了Activity A B C，A B两个Activity为唯一跳转Activity C的路径并向其传递了需要展示的对象信息x，接收intent的数据的代码如下：\n1 2 3 4 if(Build.VERSION.SDK_INT\u0026gt;=Build.VERSION_CODES.TIRAMISU) historyData = ac.intent.extras!!getParcelable(AppInfo.INTENT_KEY_RENEYE,LgroModel::class.java)!! else historyData = ac.intent.extras!!.getParcelable\u0026lt;LgroModel\u0026gt;(AppInfo.INTENT_KEY_RENEYE)!! 在测试的时候未发现任何问题，于是混淆打包release，出事了，提示空指针。\n首先考虑混淆导致data类错误和强制非空转换的逻辑问题，但查了半天该keep的都正常keep，逻辑在debug包下无论怎么点都不会有问题。尝试打印传入对象，在release包下依然有效。尝试传递字符串，传递正常。于是问题就变成了为何intent传递对象失效。\n解决 问题回到了获取Parcelable对象本身，此时看到为了适配新api做的分支判断，马上掏了个Android 11的手机测试，一切正常，问题看样子出在了新的方法上，遂根据关键词搜索，找到了Stack Overflow上的这篇文章,真相大白，解决方案翻译如下：\n我认为这个崩溃是由两个不幸的因素组合在一起引起的。 AGP 8 默认启用了 R8 的完整模式。R8 的完整模式会剥离默认构造函数并执行更激进的优化。在 API 33 中引入的新的 getParcelable(String, Class) 方法存在一些缺陷，如果 Parcelable 没有以特定方式定义，就会出现问题。相关错误的文档 看起来 getParcelable(String, Class) 的脆弱实现和 R8 对某些代码进行优化导致了这个崩溃。目前的解决方法似乎是在 API 33 中使用旧的 getParcelable(String) 方法。Google 表示他们已经在 API 34 中修复了 getParcelable(String, Class) 的问题。\n更新：androidx.core:core-ktx:1.10.0 包含了对此问题的修复。它包含了 BundleCompat.getParcelable(Bundle, String, Class)，该方法仅在 Android U 及以上版本上调用新的 getParcelable(Bundle, Class) 函数。\n这个问题只会在使用R8混淆之后才会出现且较难定位。所以为了解决这个问题，现在建议升级AndroidX之后使用其中的方法来获取Parcelable对象。故修改：\n1 2 3 4 if(Build.VERSION.SDK_INT\u0026gt;=Build.VERSION_CODES.TIRAMISU) historyData = BundleCompat.getParcelable(ac.intent.extras!!,AppInfo.INTENT_KEY_RENEYE,LgrolrModel::class.java)!! else historyData = ac.intent.extras!!.getParcelable\u0026lt;LgrolrModel\u0026gt;(AppInfo.INTENT_KEY_RENEYE)!! （后来发现用了兼容库版本判断也是多余的）\n1 historyData = BundleCompat.getParcelable(ac.intent.extras!!,AppInfo.INTENT_KEY_RENEYE,LgrolrModel::class.java)!! 问题解决\n","date":"2023-11-23T00:00:00Z","image":"https://img.takuron.com/20250827/1e7bc2d1c52123042ccb528e7263e7ca.webp","permalink":"https://takuron.com/post/id0025/","title":"Android 13中使用Intent传输Parcelable对象为空的解决方式"},{"content":"早就有闻Windows系统已经添加了系统级的DNS over Https的支持，趁着此次重装Windows11新系统之际换掉AdguardHome改用Windows系统自己提供的DoH支持。\n理论上Windows 10 build 19628以后的所有版本都支持此教程的方法，本人也亲测在Windows Server 2022上成功使用。\n设置DNS over Https的位置 以WLAN网络为例：打开设置-WLAN-硬件属性-DNS服务器分配，选择手动。输入一个支持DoH的服务商的DNS地址（例如Google的8.8.8.8），下面灰显的选项就会启用：\n2021.10.29 这不是一个BUG，这里设置的话可以自动覆盖所有将要连接的WIFI，更好的保护连接公共WIFI带来的隐私问题。 2021.10.5 你可以在选择网络连接的位置发现同样的选项来设置网络连接的属性，但是不能启用DoH，本文来自Takuron点top，这应该是Windows11的一个BUG。\n不过我们的设置并没有结束，坑爹的微软只预置了一些常见的全球DoH服务器，但众所周知天朝不在地球上。设置其他服务器不会有任何显示：\n你只能直接设置以下DoH服务器：\nCloudflare(1.1.1.1/2606:4700:4700::1111) Google(8.8.8.8/2001:4860:4860::8888) Quad9(9.9.9.9/2620:fe::fe) 如果需要安装国内常用的DoH服务器需要先添加\n为系统添加更多DNS over Https服务器 我们需要注册更多的Doh服务器，这可以用以下命令解决（感谢如何在win10中自定义doh服务器-远景论坛-微软极客社区：\n1 2 netsh dns add encryption server=\u0026lt;your-server\u0026#39;s-IP-address\u0026gt; dohtemplate=\u0026lt;your-server\u0026#39;s-DoH-URI-template\u0026gt; netsh dns show encryption server=\u0026lt;your-server\u0026#39;s-IP-address\u0026gt; 例如添加阿里的DoH代码：\n1 2 netsh dns add encryption server=223.5.5.5 dohtemplate=https://dns.alidns.com/dns-query netsh dns show encryption server=223.5.5.5 IPV6同理，不过DoH服务商那么多，还要连着主要次要ipv4/v6都要添加，怕不是一行行打手都麻了，为此我专门写了一个脚本，自动添加了以下DoH服务商：\n阿里DNS(223.5.5.5/2400:3200::1) DNSPOD(119.29.29.29/2402:4e00::) 深信服下一代网络工程IPV6 DoH(仅IPV6:240C::6666) 360(仅IPV4:101.226.4.6/123.125.81.6) Adguard(包括多种，详细官网查看) 下载后请使用右击，以管理员权限运行,蓝奏云下载地址（提取码h6e1）\n可以看到添加后就能正常使用国内的DoH服务了。\n","date":"2021-10-05T00:00:00Z","image":"https://img.takuron.com/20250827/ed8fda4fbfdea13178ac39ef421b2ebb.jpg","permalink":"https://takuron.com/post/id0024/","title":"为Windows11设置更多DNS over https服务器\u0026一键添加更多服务器脚本"},{"content":"前言 小米手环已经更新到了6，但越看更新越没有换的欲望，手环的功能到现在为止都没有突破性的改变，而手表还是一如既往的耗电。反而是小米运动APP（其实应该是华米的运动APP吧）的广告越来越遭人烦，这让我的视线逐步向第三方的方案转移。虽然在此之前有同为精简第三方的Notify \u0026amp; Fitness for Mi Band，但留一个破解本体还是让人难免不舒服，于是这次转而使用开源的Gadgetbridge，而且说句实话，在整理好的APP帮助下个人认为体验是最好的。\n安装步骤 备用下载位置，密码：cug3\n在官方APP中将手环的账号绑定（完成后可卸载）： 下载huafetcher用于获取加密key 。 在第二项选择为xiaomi： 选择Get token进入网页，登录小米账号（这里注意修改手机号为+86）： 这里会报错，这是正常的，直接复制地址栏所有内容到URL result内： 选择“Fetch key”，把下方生成的key复制走（到这里这个APP可以卸载了） 下载Gadgetbridge，进入后点击右下角的“+”，然后搜索你的小米手环： 这里长按进去，拖到底下，找到认证密钥，输入你刚刚复制的key到里面，回去连接，就可以正常使用了。 之后只要不动官方APP内的绑定关系就能一直使用了。\n优劣势对比 与小米手环官方APP和小米手环专用的Notify \u0026amp; Fitness for Mi Band比起来，Gadgetbridge有以下优势：\n开源 免费（相对Notify \u0026amp; Fitness for Mi Band） 无广告（相对官方） 通用方案，可以同时兼容其他品牌的手环。 轻便优雅，官方APP不需要修改不需要保留给爷爬。 那么，代价是什么呢？\n缺少对心跳、月经（米环5）等小米手环特色功能的支持 更换主题不方便（这个可以用官方APP当工具人） 通知管理不太符合个人的使用习惯（个人一般喜欢设置仅聊天手环通知，而这个应用默认·是黑名单模式） 总结 AD米一生黑，开源万岁。\n","date":"2021-04-10T00:00:00Z","image":"https://i.loli.net/2021/04/10/em5ysORGpYJHola.png","permalink":"https://takuron.com/post/id0023/","title":"使用开源的Gadgetbridge管理小米手环4"},{"content":"出于你懂得的的原因，在我朝连接国际互联网那叫一个感人。在原生安卓中，就是因为这个众所周知的原因无法正确判断联网状态诞生了“去除叹号”软件。同样的，作为难兄难弟的微软爷不甘示弱。这两天同样的事情发生在了我的Windows电脑上。\n在使用以下方法时，请首先确定这只是“显示错误”，即你已经可以判断你的电脑可以正常连接互联网的情况下还是如此显示并且影响到你对一些应用（例如自带应用商店）的使用。\n所有的联网验证相关的参数都位于注册表\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\NlaSvc\\Parameters\\Internet当中，这里以我正在使用的Windows10 20H2为例：\n这就很明了了，直接说解决方案。\n直接关闭整个验证 如果你在用一个台式机，联网验证对你来说完全没用（自家路由器难道还有需要登录的？），那么你可以直接关闭这个功能，将EnableActiveProbing参数改为0即可。\n验证DNS是否正常 如果你是笔记本，只想修好这个功能而不是一股脑的关死，那么电脑会首先确定你的ISP有没有给你的DNS投毒。以我目前的参数设置为例，在powershell里面查询：\n1 nslookup dns.msftncsi.com 其中被查询的域名是你注册表中ActiveDnsProbeHost的值。Windows会验证DNS查询到的结果是否和ActiveDnsProbeContent的值相同，v6同理。如果你返回的是类似于127.0.0.1这种解析结果，恭喜你被DNS投毒了。本人遇到的就是这种情况（PS：阿里的DNS都能间歇性投毒我想说什么不用讲了吧），但我在用AdGuardHome，所以加个重写就解决了。\n如果你没有用这类软件，并且你不想通过改写host这种自欺欺人的手段来解决问题，那么你可以将被查询的域名换成阿里dns的域名dns.alidns.com，大多数情况下，其结果总对应其DNS服务器IP223.5.5.5、2400:3200::1，可以将对应值修改后以此验证。\n验证HTTP访问是否正常 然后电脑会确定你的HTTP服务是否正常，其会向ActiveWebProbeHost对应的服务器请求一个connecttest.txt的文本文件，然后确认其值是否与ActiveWebProbeContent相等。以我目前的配置为例，这相当于：\n解决的方法有很多，DNS投毒同样会影响这个的验证结果（并且这种情况导致的验证失败非常常见），可以先尝试上述方法。\n若仍无效或者是希望彻底解决问题，用gitee page自建一个测试服务器并不是一个完美的解决方案，因为无法判断ipv4联通还是ipv6连通，此处待大佬解决。\n总结 整体来说微软的验证大多数时候还是有效的，如果偶尔出现了不可用的状况可以按照本文进行修改解决。\n","date":"2020-11-21T00:00:00Z","image":"https://i.loli.net/2020/11/21/VIA9Jxk4ROSF3XG.jpg","permalink":"https://takuron.com/post/id0022/","title":"Windows系统联网验证策略和“去除叹号”"},{"content":" 翻译自Oneplus | Don’t kill my app!，遵循CC-BY-4.0 License。 本人英语水平渣，只是为翻译自用。欢迎友善提出翻译错误，不喜勿喷。\n背景 一加和其基于Android修改的氧OS以最大程度提升原版Android的体验而著称。也许在用户体验方面的确是这样，但其在后台进程限制方面的表现却与之完全相反。\n当他们发布一加5和一加6手机时，一加推出了迄今为止市场上最严厉的后台限制，这甚至使小米或华为相形见绌。用户不仅需要启用额外的设置才能让应用正常运行，而且这些设置甚至会随着固件更新而被重置，应用会再次崩溃。因此用户被要求定期重启这些设置。\n为用户准备的解决方法 电池选项 关闭设置\u0026gt;应用和通知\u0026gt;需要操作的应用\u0026gt;高级\u0026gt;电池优化选项。 警告：最近一加手机开始对一些应用随机恢复这个设置。也就是说如果你设置为未优化，第二天可能就会恢复到优化状态。 为了避免系统自动恢复成未优化，你还必须将应用锁定到 “最近应用 ”列表中。启动您要保护的应用程序，进入最近的应用程序（应用程序切换器），点击应用右上角的锁定按钮。（译者注：新版系统请长按应用窗口\u0026gt;锁定） 这将避免应用程序在后台被杀死，并防止系统恢复电池优化设置。 然而，这并非100%。您可能需要每隔一段时间检查系统设置。请参阅提交给一加的错误报告。\n设置设置\u0026gt;电池\u0026gt;电池优化\u0026gt;切换到右上角菜单中的 \u0026ldquo;所有应用\u0026rdquo;\u0026gt;需要操作的应用为“不优化”。\n注意：有网友表示，在一加及更早的版本的手机中，需要在开发者选项中禁用Doze模式。\n（译者注：这两种方法目测是等效的，为二选一关系）\n应用自启动 在一些一加手机上，应用程序自动启动基本上阻止了应用程序在后台工作，请为您的应用程序禁用它。\n高级优化 一加6和之后的手机： 选择设置\u0026gt;电池\u0026gt;电池优化\u0026gt;更多（三个点）\u0026gt; 高级优化 你会在那里看到两个选项。这两个选项都是默认启用的。 深度优化（译者注：新版应该叫智能电池管理） 这是主要的应用杀手，如果你需要任何应用程序在后台运行，请禁用它。 睡眠待机优化 一加手机试图学习你通常在什么时候睡觉，在这些时间里，它就会禁用手机的网络连接。这个设置会阻止推送通知的发送。 一加6之前的手机： 关闭设置\u0026gt;电池\u0026gt;电池优化\u0026gt;（三个点）\u0026gt;增强优化 注意：这应该有助于解决您失去与智能手表/健身追踪器的蓝牙连接的问题（例如用于睡眠跟踪）。\n近期的应用程序清理行为 一般情况下，当你滑动清除一个应用，它是不会关闭的。Android系统自己就能很好地处理这个问题。然而在一加手机上，这可能以不同的方式工作。最近的应用清除行为管理器可能会设置成杀死滑动清除的应用。\n为开发者准备的解决方案 暂无\n了解更多 Gadgethacks: Disable This Setting if Notifications Are Delayed on Your OnePlus\n徽章 译者后记 一加的后台策略充满了与国内各大厂随地拉屎唤醒做斗争的辛酸，但也充斥着随便杀一下后台的不讲究。对于老外来说如此严格的后台管理策略是无法理解的，但对于国内的用户来说还是两难的选择，要不是大家都在用微信，谁还给垃圾腾讯机会呢？\n","date":"2020-07-19T00:00:00Z","image":"https://i.loli.net/2020/07/19/IcApJi58xgCLk2D.jpg","permalink":"https://takuron.com/post/id0021/","title":"【个人渣翻】Don't kill my app!——一加"},{"content":"以今天的标准来看，1997年互联网上的信息获取是十分低效的。搜索引擎刚刚起步，网站数目少，甚至在网上发布信息的人都寥寥无几，且当年的信息传递方法绝大多数已经被淘汰。而身处2020年的我们，为什么比以前更需要来自上个世纪的RSS了呢？\n主流信息获取的问题 说到信息获取，很多人首先会想到网页。的确现代网页能够完成对各种信息的精确表达，但人们会忽视一个关键点，那就是在信息爆炸的时代，我们更需要将自己有限的时间留给获取信息本身，而这在2020年的网页里面，在很多时候，我们仍然做不到：\n是的，他们不仅是添加广告，他们还会用要素过多的页面元素来影响你信息的获取，你需要拨开层层遮罩才能看到你需要的信息。如果你使用的是手机，那么恭喜你，你可能连网页都打不开，因为.\n然后就是：\n流量至上的时代，每个平台都试图在圈地运动中试图把用户困在自己的小圈子里面，像填鸭一样推送着自己想让用户知道的信息，并且这些信息就和骚扰电话一样是主动式的，处理信息变成了被信息“填鸭”是现在许多互联网用户的悲哀。\n这也引申出第二个问题，在APP里面浏览会留下记录。在经过分析和在各个应用肮脏的py交易中随意交易后我们的隐私荡然无存，最后变成让人可怕的服务推荐。就我个人而言，我希望保持“高冷”，不希望在我的信息浏览中留下任何关于我的喜好的信息交给互联网公司随意分析。\n最后，目前的推送系统大多数是“正反馈”的：用户喜欢看什么、就给用户推送什么以此一步步给用户打上标签。但我们常说兼听则明和忠言逆耳，真正客观的信息难以从讨好你的推荐算法中获取，这也一定程度上促进了目前互联网ETC横飞，网络战争日日不休。\nRSS的优势 RSS(Really Simple Syndication)是一种描述和同步网站内容的格式，是使用最广泛的XML应用。简单来说就是：将信息以约定的格式传递给用户，然后用户通过其他软件解析并且阅读。除了最简单的排版格式以外几乎没有其他内容的RSS在10年前都会被称为鸡肋，但现在看来，它一口气解决了几乎所有上述痛点。\n首先由于只有基本的排版元素，所以实际呈现给用户的内容基本靠第三方软件完成解析，并且一个合适的第三方软件可以简明高效的显示多个来源的信息而不必看乱七八糟的广告和适应各个网页的排版，让你不必在乎网页和APP的差异而关注信息本身。另外由于你的信息是一次性拉取的，网站无法得到你的阅读反馈，自然也就无法对你关注的点进行分析。\n而且大多数网站的RSS都是提供的首页订阅，也就是仅仅按照热度和时间顺序给你推送，任何人都会拿到一模一样的信息，你得到的信息更加客观而不会局限于你的偏好导致的推荐信息失真。最后，除了一些设置自动更新的软件会主动推送外，一般情况下RSS的刷新是被动的，也就是说是你阅读的信息而不是信息让你阅读，这才是一种良性的信息获取。\n有人要说了，如果我希望得到一些个性的的信息呢？一些第三方平台例如Inoreader可以提供订阅源的筛选服务，可以按照你规定的规则对信息进行初筛，提高你的信息获取效率。\n那你能帮帮我吗？ 这里推荐高效获取信息，你需要这份 RSS 入门指南——少数派，里面基本涵盖了通过接入服务来阅读RSS的方法，不过个人更喜欢脱离具体平台的本地软件，所以我推荐Windows平台的QuiteRSS和Android上的Rolly RSS Reader 。\n总结 RSS会不会复兴？即使是很多资深的订阅者也看衰RSS的前途，缺少更多的多媒体呈现方式和不够智能化和集中化的订阅方式的确不再适合当前的互联网环境，如果问我，我也不会认为这种东西将会成为主流。那么为何我仍然会选择这种方式？因为在面对觊觎我个人喜好和把各种网络服务打成大礼包一股脑地砸在我头上的无良互联网公司，只有使用这种原始化的信息获取方式才能保留作为用户的尊严。\nPS：本站已经支持RSS订阅。\n","date":"2020-05-22T00:00:00Z","image":"https://i.loli.net/2020/05/22/juMSAxE1ZdPtg7i.jpg","permalink":"https://takuron.com/post/id0020/","title":"为何2020年我们更需要RSS"},{"content":"以今天的标准来看，1997年互联网上的信息获取是十分低效的。搜索引擎刚刚起步，网站数目少，甚至在网上发布信息的人都寥寥无几，且当年的信息传递方法绝大多数已经被淘汰。而身处2020年的我们，为什么比以前更需要来自上个世纪的RSS了呢？\n主流信息获取的问题 说到信息获取，很多人首先会想到网页。的确现代网页能够完成对各种信息的精确表达，但人们会忽视一个关键点，那就是在信息爆炸的时代，我们更需要将自己有限的时间留给获取信息本身，而这在2020年的网页里面，在很多时候，我们仍然做不到：\n是的，他们不仅是添加广告，他们还会用要素过多的页面元素来影响你信息的获取，你需要拨开层层遮罩才能看到你需要的信息。如果你使用的是手机，那么恭喜你，你可能连网页都打不开，因为.\n然后就是：\n流量至上的时代，每个平台都试图在圈地运动中试图把用户困在自己的小圈子里面，像填鸭一样推送着自己想让用户知道的信息，并且这些信息就和骚扰电话一样是主动式的，处理信息变成了被信息“填鸭”是现在许多互联网用户的悲哀。\n这也引申出第二个问题，在APP里面浏览会留下记录。在经过分析和在各个应用肮脏的py交易中随意交易后我们的隐私荡然无存，最后变成让人可怕的服务推荐。就我个人而言，我希望保持“高冷”，不希望在我的信息浏览中留下任何关于我的喜好的信息交给互联网公司随意分析。\n最后，目前的推送系统大多数是“正反馈”的：用户喜欢看什么、就给用户推送什么以此一步步给用户打上标签。但我们常说兼听则明和忠言逆耳，真正客观的信息难以从讨好你的推荐算法中获取，这也一定程度上促进了目前互联网ETC横飞，网络战争日日不休。\nRSS的优势 RSS(Really Simple Syndication)是一种描述和同步网站内容的格式，是使用最广泛的XML应用。简单来说就是：将信息以约定的格式传递给用户，然后用户通过其他软件解析并且阅读。除了最简单的排版格式以外几乎没有其他内容的RSS在10年前都会被称为鸡肋，但现在看来，它一口气解决了几乎所有上述痛点。\n首先由于只有基本的排版元素，所以实际呈现给用户的内容基本靠第三方软件完成解析，并且一个合适的第三方软件可以简明高效的显示多个来源的信息而不必看乱七八糟的广告和适应各个网页的排版，让你不必在乎网页和APP的差异而关注信息本身。另外由于你的信息是一次性拉取的，网站无法得到你的阅读反馈，自然也就无法对你关注的点进行分析。\n而且大多数网站的RSS都是提供的首页订阅，也就是仅仅按照热度和时间顺序给你推送，任何人都会拿到一模一样的信息，你得到的信息更加客观而不会局限于你的偏好导致的推荐信息失真。最后，除了一些设置自动更新的软件会主动推送外，一般情况下RSS的刷新是被动的，也就是说是你阅读的信息而不是信息让你阅读，这才是一种良性的信息获取。\n有人要说了，如果我希望得到一些个性的的信息呢？一些第三方平台例如Inoreader可以提供订阅源的筛选服务，可以按照你规定的规则对信息进行初筛，提高你的信息获取效率。\n那你能帮帮我吗？ 这里推荐高效获取信息，你需要这份 RSS 入门指南——少数派，里面基本涵盖了通过接入服务来阅读RSS的方法，不过个人更喜欢脱离具体平台的本地软件，所以我推荐Windows平台的QuiteRSS和Android上的Rolly RSS Reader 。\n总结 RSS会不会复兴？即使是很多资深的订阅者也看衰RSS的前途，缺少更多的多媒体呈现方式和不够智能化和集中化的订阅方式的确不再适合当前的互联网环境，如果问我，我也不会认为这种东西将会成为主流。那么为何我仍然会选择这种方式？因为在面对觊觎我个人喜好和把各种网络服务打成大礼包一股脑地砸在我头上的无良互联网公司，只有使用这种原始化的信息获取方式才能保留作为用户的尊严。\nPS：本站已经支持RSS订阅。\n","date":"2020-05-10T00:00:00Z","image":"https://i.loli.net/2020/05/10/VnFD2HCmewfQuY4.jpg","permalink":"https://takuron.com/post/id0019/","title":"以最简单的方式改进自己电脑的DNS"},{"content":"由于个人的小5实在是小毛病太多了，钉的人实在是体验不佳，于是决定上半年更换手机。本来由于这两年小5给我带来了极好的使用体验使得本人非常期待一加的压轴，打平即可出线，奥力……\n小米10，NB……\n然后就陷入了深深的纠结，为了硬件牺牲系统和为了系统牺牲硬件两难之下，选择了让我倍感舒畅的系统。但在这一段时间已经对一加感到深深的的失望，虽说可以感知不强自我安慰，但没有就是没有，不香就是不香。\n不过当手机实际到手的时候却给我带来了意外的惊喜，首先是这个配色，在线图是这个样子的：\n说实话一开始没觉得这个绿不拉几的东西真没什么好感，只能说比默认的纯黑看上去更活泼而已，但当我真的拿起这个机器的时候就明白了什么叫以实物为准：\n实际上的手机更像是一种浅蓝，随着光线变化会变成完全的天蓝色，除非像标准的看量筒一样的方法看它，否则根本看不出在正视下手机地绿。磨砂玻璃材质的处理效果有一种层次感，像极了在正午下的浅水。小米10个人也在门店体验过，不能说难看，但其略带迷惑的配色，真的感觉缺少这种统一的美感，相比之下高下立判。可以说一加真正做到了“旗舰不用冲”，在价格相对良心的同时代代审美在线，这点还是希望年轻化的粗粮企业学习一下。\n再就是对今年旗舰来说不是新鲜事但对本钉子户来说非常舒心的体验：本来专属于睾贵的星星星的曲面屏已经飞入寻常百姓家，虽然有的时候的确会导致操作灵敏度低，但的确提升了操作体验，真正做到了“全屏操作都跟手”。90hz外加调教不差的氢氧OS的确是全新的体验，狠狠的打了我这个“笔记本是144hz高刷无感”的人的脸（LCD出来背锅）。双扬+杜比音效使得手机的观影体验得到了巨大的提升，都快让我忘掉了应该使用耳机这件事。（可惜一加并不”极其先进“，我想要耳机孔啊\u0026hellip;\u0026hellip;）可以说，钉子户虽然再战十年，但早拆迁早享受啊。\n至于缺点，当然也不是没有：没有耳机孔，即使努力做小了依然丑的挖孔摄像头，仅仅是够用的30w快充。外加上参数党喜欢的lpddr5，无线快充，只能说8和真香机完全无缘。\n但是这里我想说说系统的问题，虽然我同意这是个仁者见仁智者见智的问题，但我一定要说：我不管你们怎么说，我觉得氧OS就是真香。目前处在没有解锁的状态，只是利用应用”冰箱“的设备管理员模式的授权我就一次性解决了后台应用管理、更隐秘的权限管理和静默安装三大痛点。外加一加对刷机的”放权“：可以自由解锁并且刷机保修。你当然可以说MIUI可以关广告，可以解bl。但小米已经是一个大众品牌了，高度定制的系统和bl解锁申请并不会阻挡极客，但白纸系统+自由解锁才能真正的体现”自己动手创造和定制“的极客精神。\n总结来说，一加8香吗？不香。一般人适合买吗？不太适合。但我为什么要买呢？它做成了我心目中的”梦幻之作“\n图片来自网络，如有侵权请联系本人删除。\n","date":"2020-04-21T00:00:00Z","image":"https://i.loli.net/2020/04/21/5x4zFNDm6cTq91P.jpg","permalink":"https://takuron.com/post/id0018/","title":"一加8个人使用体验——失望后的惊喜"},{"content":"不知道该做点什么，突然有人向我反馈我以前写的加密应用不兼容Android10，想想觉得，干脆为大家重制一款用来加密的工具吧，毕竟老的也是我三小时作品。\n为此我盯上了与佛论禅，这是一个很老的网页，里面是专门为老司机发链接而设计的一套混淆系统：利用一些生僻字来代指一些编码，从而达到混淆的目的。实现原理很简单，只要把某种混淆算法的结果的每一个字符对应一个生僻字就能实现。而且，不一定是混淆算法，同样的原理也可以用在加密算法上，脚踩两\u0026hellip;一石二鸟，就这么愉快的开干了。\n加密部分不用我们再造轮子，crypto-js可以实现现在所有常见的加密算法，为此我可以直接选择了比较好用的AES加密算法，首先遇到的难题是：将AES加密的文本进行对应，作为著名懒狗，当然不会做那种一个个写对应文本的工作啊（况且我的语文水平还不够），然后，我在GitHub发现了宝藏：\n感谢这位老哥的对照表，而且这位老哥的实现思路貌似和我一致，可惜是一个命令行的Java程序\u0026hellip;\n随后就是界面，虽然bootstrap过气了，4.0的栅格布局还默认为手机尺寸上手有点难受。但难看不代表难用，神奇的使用Dreamweaver完成了一次网页设计，反正来的快吗…\n最后就是有意思的部分来了，作为一个混子，我还没学到加密算法原理的部分（讲了估计也不会认真听，纯理论这么枯燥我是难以静心学的），但在加密的生产实践中发现了规律：所有以ASE加密算法计算出的结果均以U2FsdGVkX1开头，很多网站都给出了类似说明，但均没有给予证明，希望大佬可以给与证明或者指出错误。不过为了佛语的随机性，一个开头相同的佛语很影响效率，所以本人砍掉了开头，目前为止，没有无法解密的文本。\n另外，事后才知道ASE可以不需要密码。但当时为了统一性，本人为Web端设置了默认密码TakuronDotTop，这样在不需要加密仅需要混淆的情况下，可以直接将密码栏留空完成操作。\n成品如下图所示，国内版网页，国际版网页，源代码在github开源，基于MIT开源协议，欢迎Fork和Star。\n","date":"2020-04-09T00:00:00Z","image":"https://i.loli.net/2020/04/09/C2HvEoy8lYzATPW.jpg","permalink":"https://takuron.com/post/id0017/","title":"记一次web工具制作：重制版与佛论禅"},{"content":"众所周知，笔记本为了兼顾续航采用与传统台式PC不同的显卡使用模式，其中Optimus的确是某种意义上提升了笔记本的续航，但随之而来的就是OBS捕捉不到屏幕画面而彻底黑屏，所以根据Optimus的原理，我们要让OBS强制运行在核显上。\n显卡设置中设置强制集成显卡 以N卡为例，在右下角托盘找到Nvidia图标，然后显卡驱动中找到管理3D设置-程序设置，添加OBS进来后将其的模式改为集成显卡。\n在Windows系统设置里面将OBS设置成“节能” 这是Win10 1903新出的设置，在设置-显示里面寻找图形设置，选择经典应用，添加OBS Studio并将其设置为“节能”，亲测不开这个选项仍然会导致黑屏并且难以直接用核显打开OBS。\n更新到最新版的OBS 亲测，OBS最新版完美兼容win10 1909，不需要开启兼容模式，所以建议大家直接去官网 下载最新版应用来使用。\n以上设置后OBS的黑屏问题应该已经解决（主要是网上的教程都没写第二步所以拿来水一下下）\n","date":"2020-03-16T00:00:00Z","image":"https://i.loli.net/2020/03/16/yH2f5qGeKJML3Wc.jpg","permalink":"https://takuron.com/post/id0016/","title":"OBS Studio在笔记本上黑屏问题的解决方案"},{"content":" 第四十条　中华人民共和国公民的通信自由和通信秘密受法律的保护。 ——《中华人民共和国宪法》\n最近微信QQ封的越来越多了……真要说喜欢在网上胡说八道的封了就封了吧，我室友讨论了一晚上高数问题第二天QQ就被封了，这个老好人说他乱发表言论我都不信，更别说他自己都不知道为啥……所以一个真正自有可控的聊天软件已经成为了一个需求。无意中了解到了Matrix系统，可以利用自有VPS安装服务端软件Synapse实现个人聊天服务器并通过多端的客户端软件连接，并且设置后可以以服务器作为代理连接所有Matrix服务器，反正已经有了一个网站服务器，就顺道玩玩吧。 可是这个安装真的是……一言难尽。在我的研究之下也没完全弄明白基于系统的安装方法，而基于pip的安装又各种问题……这里记录一下我基于系统软件安装的实现方法。\n本人才疏学浅，欢迎各位用过的大佬提出更好的方案，指正本人的错误。\n环境 Debian 9 ；已安装宝塔和Oneindex；在Root用户下进行操作。\n安装Synapse Synapse是Matrix官方做的示例服务端，也是现在最推荐的客户端，这是官方的安装文档，两种方法写的很凌乱……这里我以Debian为例写一下大概的步骤。\n1.安装Python环境 1 2 3 apt-get install build-essential python3-dev libffi-dev \\ python3-pip python3-setuptools sqlite3 \\ libssl-dev python3-virtualenv libjpeg-dev libxslt1-dev 2.安装Synapse软件 根据官方推荐，这里添加了Matrix的安装源来安装最新版的Matrix。以下指令建议一个个录入来确保都能正确执行。\n1 2 3 4 5 6 apt install -y lsb-release wget apt-transport-https wget -O /usr/share/keyrings/matrix-org-archive-keyring.gpg https://packages.matrix.org/debian/matrix-org-archive-keyring.gpg echo \u0026#34;deb [signed-by=/usr/share/keyrings/matrix-org-archive-keyring.gpg] https://packages.matrix.org/debian/ $(lsb_release -cs) main\u0026#34; | tee /etc/apt/sources.list.d/matrix-org.list apt update apt install matrix-synapse-py3 中间会提示以下两个界面，第一个问你服务器名称瞎写把，反正你不用这个服务器（下面会说），另一个问你是否愿意帮助他们，我们这么热心善良当然选否啊（滑稽）\n安装好之后会自动运行服务器，如果是本机就可以访问http://localhost:8008来检查软件是否安装好了，vps吗……待会儿再说。\n配置Synapse 我虽然知道这样安装之后会在/etc/matrix-synapse/homeserver.yaml生成配置文件，但我根本无法用官方文档里面的方法关闭这个服务器，更别提更新配置文件了。而且不更新配置文件的这玩意不是不好用，是没法用！所以我用了个技巧绕过了官方的服务器。如果谁知道这种方法安装的服务器怎么操作请务必告诉我。\n为新的服务器文件创建文件夹 这里可以按照自己喜好来操作\n1 2 3 mkdir synapse cd synapse # /root/synapse/ 创建一套配置文件 1 /opt/venvs/matrix-synapse/bin/python -B -m synapse.app.homeserver -c homeserver.yaml --generate-config --server-name=takuron.top --report-stats=no 其中server-name按照官方要求是需要填写自己的域名的，这样才能正确的接入Matrix网络。不过如果是个人服务器的话其实可以随意写，第四个不知道是什么貌似也和接入Matrix网络有关，选no就好。\n这会儿就可以启动服务器了，但在此之前需要一些配置。\n必须的配置 打开主配置文件homeserver.yaml，首先在207行：\n1 2 3 4 5 6 7 8 9 10 #line 207-215 - port: 8009 tls: false type: http x_forwarded: true bind_addresses: [\u0026#39;::1\u0026#39;, \u0026#39;127.0.0.1\u0026#39;] resources: - names: [client, federation] compress: false 将端口改成8008以外的数，因为我们还没能成功关掉自带的服务器，这里曲线救国再建一个不同端口的服务器（反正默认都只能本地访问）\n然后在862行：\n1 enable_registration: true 开启注册（如果私有服务器，回头记着关，我是懒得一个个添加账号的，不如组织注册完后关掉注册）\n然后在对应目录执行指令，启动服务器，我们的服务器就建立起来了。\n1 synctl start 可选的配置 配置反向代理 你会发现，上一步建立的服务器是没办法直接用ip+端口打开的，因为官方默认建立的就是本地服务器，虽然有直接把服务器暴露给网络的设置，但我们可以使用反向代理的方法，像网站一样管理服务器。这不是我的小聪明，这是官方推荐的做法，如果你没有宝塔，你可以按照官方文档来用普通的网站软件来解决问题，记得把默认的8008端口改成你的端口。这里我简单写写宝塔的配置方法。\n新建一个网站，纯静态就可以，绑定好域名然后找网页设置-反向代理，按照底下图片的设置就好了，记得修改端口为你自己的端口。\n提交，看看外网访问是不是这个界面：\n是的话大功告成。\n客户端连接 客户端足够多是我选择Matrix的重要原因，这里有可供连接的客户端的列表，个人觉得其中Riot.im的客户端都已足够优秀并且支持足够多的平台，随便下载一个，将服务器设置为你的域名对应的网址（开TSL记得用https），然后就可以开始私有聊天了。\n总结 软件写得好，不如软件文档写得好。 ——鲁迅\n软件文档引发的惨案……软件是好东西但文档真的人类迷惑搞得我转了半天在研究出这个不是方法的方法。不过有一说一，一整天解决了我和小伙伴的通信隐私问题，也算是目前情况下的一种收获吧。愿自由技术永远引导人类发展。\n","date":"2020-02-09T00:00:00Z","image":"https://i.loli.net/2020/02/09/D9VJIRu8ioxEtls.png","permalink":"https://takuron.com/post/id0015/","title":"安装Matrix系统（Riot.im）的服务端Synapse"},{"content":"本人一纯正薅羊毛党，以下内容会涉及一些占用各种（不属于本人的）资源的事情，精神洁癖请主动远离。\n学计算机救不了没了微信就没法传文件的人。 ——鲁迅\n估计各位刚入大学的萌新会跟我一样，发现大学最大的麻烦就是：13事多。毕竟高考前不会有人闲的去找高三党做这做那的，但无所事事的大一新生最适合下方工作了。不过这还没完，即使在即将欢送9102年的时候，统计表格的工作在各位老师和班干部的眼里还是这么做的：\n“大家把表格填一下，回头微信把自己填完的私发给我。”\n（把全班的整理到一起估计也是逐行复制吧）\n扯远了，不过这的确在侧面反应出大学生的文件多，设备多，且很多人还在用上世纪的方法进行着管理（或者压根不管理）。这个时候合理的文件管理才能保证我这种人的高效（zhe）率（teng）学习和生活。\n文件分级 根据重要程度和私密程度进行分级，这在企业文件管理中非常重要，但是对于个人（尤其是大学生）来说就没有那种重要的感觉，毕竟接触不到什么机密。所以这里我认为不缺钱随便存，买够正经云空间统统往里面塞是最枯燥的。不过有钱估计看到标题就不往下读了，所以我给我的文件分为三类：\n隐私有关的纯文本笔记和除了office套件使用以外的文档，一些（加密后的）密钥文件。 隐私有关的图片，音频，视频。 隐私无关文件。 这是我的分级，当然各位会比我做得好。\nU盘 U盘虽然蠢但有用，这是相对于云端存储更可靠，相对于硬盘更便携的数据存储方案，我用的一个64g的，用来处理经常要修改的文档，并且以此为基准修改云端备份。在机房或者某些连不上网的电脑上面，你会感激你的u盘的。\n坚果云 这个还是要强力推荐的，webdav协议具有极大的扩展性，配上一些开放的标准（例如keepass，markdown笔记），可以实现自由的多端协作，完爆其他国产云存储十条街，比海外网盘也好不好。不过弊端也很明显：免费版的流量限制，当然这是必须的，毕竟要恰饭的吗。\n所以我用坚果云存储第一类文件，因为这些文件都很小（纯文本为主），不会像照片一样一旅游照片备份半个月流量没了（说的我经常旅游一样），并且访问速度足够快，不会像onenote一样抽风起来只能拜天求佛。\n这里我密码管理可以参考这篇文章，笔记本我用的Joplin，他们都可以通过坚果云完成多设备同步，方便随时查看。\n个人Onedrive 我有三个onedrive（会一个个介绍），先说个人的，这是最安全的存储区域，除了阴谋论怀疑微软，基本可以保证数据是安全可控的，可以存储一些隐私和重要资料，并且空间也是相对较大的15g（别问我多的10g哪儿来的，去淘宝买个扩容一起薅巨硬羊毛正解，这个比较靠谱）。不过缺点还是有的：还是不够用，毕竟128g的手机都能被各位塞的满满当当的。\n这里我主要保存个人照片（同步方式很多），还有一些比较大的非纯文本文档（例如PSD文件，也许更应该归类于图片）。\n电脑的话如果要上传直接用win10自带客户端同步，手机这里推荐一下FolderSync，可以定时自动同步一些文件夹，可以保持文件多设备同步。\n学校Onedrive 来自一个拖各大平台平均水平的大学，学校onedrive没有管理员所以容量是1T。这个不是绝对安全的，因为学校有可能设置管理员或者收走你的学生邮箱，但是一般情况下这也算是个人空间。不过这个网盘还有个问题，为了防止过度分享，没有管理员的onedrive没法接入像上文FolderSync这样的同步软件，难以用来在设备之间同步文件，这就很头疼。我最后的解决方案是利用他做敏感数据冷备盘，定时手动加密数据压缩传进去，并且把一些学习有关的隐私数据放在里面。\n5T子账号的Onedrive 不讲具体账号类型，反正不靠谱就完事，但一般那种有管理员权限的个人开放申请的基本都不会跑路，有点良心的也不会经常看你数据，还算是长期有效。这种盘的价值就在于空间足够大，而一般占用空间的也都是一些网上可以公开下载的软件，游戏或者小姐姐。并且这是可以用FolderSync的，所以它理所应当成为了一些非重要数据的桥梁和备份，壁纸啊，视频啊，color图啊。随叫随到，多端备份。\n甚至可以开分享网站\n其他的备份 当然，有人得说了，微软跑路我不得凉凉？首先，我电脑手机分别本地都有备份，而且……\n冷盘备份了解一下。\n总结 经过不懈的努（zhe）力（teng），现在终于做到哪儿都能找到备份文件了，251试炼能活下来了（跑）。基本上找我存过的文件可以做到在任意设备三十秒内找到，合理的文件管理会给寻找文件带来方便的同时还能边喝水边看微信找文件的同学。算是一次有成果的折腾\n","date":"2019-12-25T00:00:00Z","image":"https://i.loli.net/2020/02/07/ZIndB7rYHxcJEP5.png","permalink":"https://takuron.com/post/id0014/","title":"9102年末的个人文件的管理"},{"content":"今天在各路大佬的洗脑之下，终于决定更新一下Windows10 1909，不过我的电脑一直处于更新失败被我屏蔽更新的状态，所以我准备一上午彻底解决Windows的更新问题，然后\u0026hellip;\u0026hellip;\n垃圾微软，菜鸡Windows，毁我青春。\n首先先说明一下我电脑的状态，曾经装过多系统，留有专门的一个fat32格式的引导分区，不过现在只能引导到Windows了。系统自带的更新总是在最后一刻无法完成更新并撤销，而且不打这些安全补丁是不允许大版本升级的。\n由于有错误代码，我一开始在怀疑我的.NET框架，而且为了安装学校的旧版SolidWorks 2010还安装过很多以前版本的.NET框架，所以就卸载了一遍重新安装，未果。清空升级缓存文件，未果。\n然后动起了其他主意（后来发现这个选择非常对），使用官方的升级工具升级，然后：\n然后又试了其他问题，并且尝试直接使用u盘pe来覆盖Windows文件，结果反正就是官方回退更新或者难以确定。然后我看到了[这个帖子]https://tieba.baidu.com/p/5078424060?red_tag=q1629212285) .\n首先感谢上面那位贴吧大佬，个人亲测成功的土办法就是：改成Legacy+MBR直接引导到Windows。\n装过多系统的各位应该都跟我一样，有一个专门的引导分区来完成多系统切换或者防止Linux的主分区过大而无法启动，但是这就带来了个问题：Windows无论如何都不是直接通过主板的bios打开的。具体可以在搜索里面输入 msconfig 查看：\n要是里面是空的就说明你引导有问题，而且 zz Windows会因此无法正常完成更新，所以解决办法就是：在pe里面利用工具将分区格式改成mbr。\n我使用的是微pe，原帖推荐的DiskGenius是个免费版没办法转换分区，我用的另一个分区工具成功转为mbr并先默认设置c盘微启动引导，\n然后就可以正常使用微软官方win10升级工具升级了。\n有人说那我的引导分区怎么办，多系统怎么办？\n你不会再改回UEFI+GPT吗，然后重建你的引导，这对给Linux分过区的你来说不难吧。\n","date":"2019-12-13T00:00:00Z","image":"https://i.loli.net/2020/02/07/BuEFfQyZ7xJ2eRG.jpg","permalink":"https://takuron.com/post/id0013/","title":"多系统环境下Windows系统更新错误的一种解决方法"},{"content":" 2025-04-27更新：修复了图片无法显示的问题。\nPS：本来不想写这个文章的，对于搜图大佬来说以下都是火星万年的技巧，不过当我每次看到有些人拿着已经被压绿的图往自己的空间相册发\u0026hellip;\u0026hellip;求求你了学一学怎么找原图吧，好好的图被你糟蹋了。\n很多人（我是指喜欢ACG圈的人）很多时候都有这种经历，随便逛贴吧b站之类的网站时突然看到一张图（以下是示例）：\n哇好可爱我要抱回家\u0026hellip;\u0026hellip;不对是设置为壁纸，不过很明显，这种情况下找回来的大部分都不是原图，基本都是经过二次加工后的图片当表情包使。就算是原图在贴吧等的压图下质量也会大幅度下降（贴吧压图鸭绿江了解一下，五十次重复压缩后贴吧会把图变成全绿），所以我们要的就是提高图片的清晰度。\n寻找原图 很多人上来就放大图片，这是不对的，因为放大图片毕竟是计算机自动补齐放大的像素，不如画师自己画出来的完美。还有人告诉我百度/Google搜图净是瞎出结果，的确这两者在搜索ACG图片时，它的结果并不准确，很多搜索出来的也不是原图，所以本人推荐以下两个搜索ACG原图的网站：\nMulti-service（iqdb） SauceNAO\n其中前者主要搜索各大转载站，后者则主要搜索p站之类的原创站。Android手机可以使用以下使用这两个网站搜索的应用以图搜图\u0026ndash;酷安，将来源设置成对应网站可以达到同样效果。\n搜索结果如下：\np站原图，分辨率800*570：\n可以看出两个网站都精确地找到了原图，一个来自转载站一个来自p站。一般情况下，公开发布的图片在这两个网站都是搜到原图。可是这张同人图在p站分享的时候清晰度就不算特别高，即使是原图也达不到壁纸标准，那么就需要第二步：放大图片了。\n图片超分 假如没有搜到原图或者第一步找到的原图依旧不满意，就需要对图片进行放大。注意，这里的放大不是简单的调整图片大小，所以这里有专门的网站对图片进行放大处理，防止出现锯齿。\nwaifu2x是专门放大ACG图片的网站，可以自动调整ACG图片避免锯齿，Android软件Waifu2x-图片放大\u0026ndash;酷安可以达到同样的效果，其原理是使用卷积神经网络对动漫风格的图片进行放大操作，也就是自动计算放大后的图片缺失像素的形状。放大的时候需要将放大倍数调整为2，以下是示例图片放大的结果（大图，流量党小心）：\n放大第一次，分辨率1600*1140\n放大第二次，分辨率3200*2280\n可以看出两次放大后仍然看不出任何处理过的痕迹（至少我看不出），而原本分辨率不佳的图片已经清晰到足够设置为壁纸了（我反正够了，不知道有没有用4k屏的），理论上这个网站可以把任何分辨率不佳的ACG图片放大到壁纸级别，不过亲测自地三次（放大8倍）或者第四次（放大16倍）时就会出现一些处理痕迹，所以说：尽量搜索原图吧。\n三、以图搜番 这个介绍算是附赠。嘛，假如你觉得你得到的图是来自某个动漫又不知道是什么动漫的时候这个网站就有作用了whatanime是用来根据截图搜索对应动漫的网站，只要你的截图是动漫某一帧的截屏，它在大部分时间都能准确告诉你来源和对于集数。Android系统可以用WhatAnime - 以图搜番\u0026ndash;酷安软件达到同样效果。\n以下是本人用冷番测试的结果，可以说是完美。\n哦，还有一件事 各位大神转图的时候请注意版权问题，提高版权意识，p站转图是需要标画师和id的，请尊重画师的劳动成果。\n本文示例图p站id65499784，画师プリンプリン\n","date":"2018-08-26T00:00:00Z","image":"https://img.takuron.com/blogpost/6897991-bf639bc4390b912e-tuya.webp","permalink":"https://takuron.com/post/id0012/","title":"ACG原图搜索与放大技巧--让你看到的每张图都达到壁纸级的清晰度"},{"content":"最近了解到了国外的免费cdn加速商cloudflare，自带https比那个要备案还非要收钱才能用https的百度加速云看上去好不少，所以测试了一下加速效果。\n以下是本人新建的测试网页 （已失效），二者网页内容完全相同：\n[gitlab无加速](https://speedtest-gitlab.zsxh.me/)\n[cloudflare加速后](https://speedtest-cloudflare.zsxh.me/)\n首先直观感受：无变化，甚至还能慢一点，尤其是图片加载的时候（这貌似在下面的文件下载测试时获得了证实），但是统计网站给的数据却让人大跌眼镜。\n前面的是没有经过加速的网页，很明显加载速度完全不是一个量级，后者秒杀前者，这和我们的直观体验不服，所以我换了一个更真实的网页测速器，[webpagetest](https://takuron.top/go?url=https://www.webpagetest.org/)是一个利用真实浏览器来测试整个网页加载过程的测试网站，我们用它的北京节点来测试一下。\n很明显这个才和实际体验相符，cloudglare对文本文件进行了有效的加速，可对于图片等资源文件却一点不留情面，不仅没能加速反而搞起了减速。\n文件下载测试可以选择网站里最上方的download，会出现一个视屏文件，利用那个视频文件可以测试下载速度。\n看样子不仅是没有起到加速的作用，反而出现了减速的迹象，果然没有对媒体文件进行缓存。\n综上，cloudflare对于页面的加速还是不错的，可惜由于抠门，媒体资源文件走cdn的减速抵消了页面的加速效果，所以说使不使用cloudflare完全是一个可选项，因为就算加速效果也不明显。\n","date":"2018-07-06T00:00:00Z","image":"https://i.loli.net/2020/02/07/mP7ndhTLWK4OzJX.jpg","permalink":"https://takuron.com/post/id0010/","title":"cloudflare对gitlab page的加速效果"},{"content":"踩了无数的坑终于搞明白gitlab pages如何搭建了（一般我写的东西都是自己踩坑后分享的，不喜欢写能找到的资料），决定写一写。\n为什么不用GitHub或者coding？因为GitHub最近拦截了百度蜘蛛，懂SEO都知道这是对网站被搜索引擎收录的毁灭性打击，并且GitHub不支持自定义域名https，而coding需要人工审核还巨慢。所以这里我决定使用gitlab\n与GitHub pages不同，gitlab pages的构建基于gitlab cl，也就是大部分pages的配置都基于 配置文件而不是项目设置 ，连基本的纯静态HTML都需要配置文件，我们就从最基本的开始探究。\n静态HTML的搭建 首先我们访问gitlab，点开用户：pages的首页，这里面是所有gitlab支持的静态pages类型，我们选择plain-html并克隆。\n（或者对于纯HTML这种简单的项目，你也可以自己新建.gitlab-ci.yml文件，里面会提示有模板，按照模板写好文件后新建public文件夹往里面放网页就可以了）\n接着项目会自动进行一段时间的构建，构建好后就可以在Pages里看到网址了。\n（如果想新建 用户名.gitlab.io 为网址的个人页与GitHub同理，把项目名命名成这个就好了）\njekyll项目的搭建 对于jekyll项目，正常可以与静态HTML同理，最简单的方法当然是克隆示例然后制作，可是更多时候遇到的是准备部署模板，对于模板更好用的当然是自己创建配置文件时要注意 一定要同时创建一个Gemfile文件 ，如果不知道怎么写可以直接复制官方的示例。（别问我为什么我也不知道，我只知道没有这玩意会失败）\n绑定域名并开启https 如果你没有域名，那么对你而言本文已经结束了，因为gitlab的域名都自带https，这里要讲讲怎么自己申请自己域名的可信签名。\n不同于国内的coding，gitlab要求你自己申请签名，这里我推荐freessl.org，首先打开网站，填入你的域名，公证机构选默认的就行。然后他会让你填邮箱和证书类型，其中要注意 证书类型一定要选RSA 其他的保留默认就好。\n然后他会进行签名认证，添加解析什么的不会自行百度。成功后就会产生两串字符串和一个下载按钮，建议把签名下载下来方便续签（其实注册账户也可以达到同样目的），还有签名是很重要的网站安全凭证，无事情不要随意透露private key。\n接着我们到gitlab项目页，找到设置里的page，选择new domain会出现如下页面。其中第一个是域名，第二个和第三个是签名，把刚刚申请网页里的第一个复制到第二个框，第二个到第三个框就好了。\n接着他会让你新建一个验证解析，这个是今年新加的来解决页面安全问题，老老实实添加解析我不解释了。（貌似后面可以删）\n最后给域名添加 你的用户名.gitlab.io 的cname，再打开你的网站，完美。\n","date":"2018-02-25T00:00:00Z","permalink":"https://takuron.com/post/id0008/","title":"利用gitlab搭建静态页面并开启https"},{"content":"最近在android studio里新建了一个项目，本来觉得as真的很人性化，给了这么多模板，还都带material design效果，可是当我编译完成后……\n握草这是什么玩意，最简单的hello world都给我附赠个状态栏层级错误，强迫症表示上面的阴影真的是令人无法忍受啊。\n然后找解决方案，国内是完全没有这方面资料（至少我没找到）（国人果然对md还是非常冷淡），英语水平又呵呵的很，所以一等就是好几个月没有理这个bug。\n前几天和朋友聊起这个bug，他们建议我去stackoverflow 再找找。一开始我是拒绝的，因为我这访问sf奇慢（开网页分钟级），但当他替我搜到时，我就在感叹：国外人真会玩啊。\nstackoverflow原文地址\n国外dalao提供了四种解决方案，下面我写一下我亲试有效的两种：\n1.去除statusBarColor 关于这个属性，android官方文档是这么解释的\nTo set a custom color for the status bar, use the android:statusBarColor attribute when you extend the material theme. By default, android:statusBarColor inherits the value of android:colorPrimaryDark.\n本人借助翻译软件的渣翻：要为状态栏设置自定义颜色，可以在扩展主题主题时使用android:statusBarColor属性。默认情况下,android:statusBarColor继承了android的值:colorPrimaryDark。\n也就是说，我们现在需要它是透明的。然而透明是android的默认选项，虽然根据回答者的意思是我们在代码里就设置的是透明，但这完全没有必要，所以，我们应该找到value-v21里的style.xml，把这行：\n1 2 \u0026lt;item name=\u0026#34;android:statusBarColor\u0026#34;\u0026gt;@android:color/transparent\u0026lt;/item\u0026gt; 去掉就OK了。\n2.外面加一个LinearLayout 很玄的一个方法，然而的确是有效的，不做首要推荐。\n（由于简书和我的博客老抽，只好先截图了，具体的可以到原文里查看）\n以上两种方法处理之后界面就恢复正常了～\n","date":"2017-10-15T00:00:00Z","permalink":"https://takuron.com/post/id0003/","title":"Android studio 2.2.3默认项目状态栏层级错误的解决方案"},{"content":"android support一向是Google官方提供给开发者解决应用兼容性和提供官方工具的好东西，这些都打包存在m2repository中。aide支持这个库，不过由于万里长城的影响，aide内置下载是有一定问题的，这里讲讲如何不用梯子下载安装最新版m2repository。\n首先下载打包版本的m2repository，下载地址（推荐Google官方）：\nGoogle官方（国内已经可用）\n腾讯的国内镜像\n外国镜像（非常非常慢）\n百度网盘，提取码0202\n下载完成后解压。注意：解压的时候最好选择“解压到当前目录”或“解压到指定目录”，如果没有这种选项下一步请保证选择的文件夹名字为“m2repository”。\n以下以es文件浏览器解压为例，请选择2、3项而不是第一项。\n解压后在aide中找到解压得到的文件夹，复制路径。\n再次提醒：一定要保证复制路径的是文件夹名字为“m2repository”的文件夹，如果不是，请往里面寻找。\n最后，在菜单里找到更多〉设置〉构建/运行〉maven仓库目录，把刚刚复制的路径粘贴进去即可。\n再在项目中引用类似android support v4之类的库，可以看到项目已经正常了。\n","date":"2017-10-11T00:00:00Z","permalink":"https://takuron.com/post/id0001/","title":"aide安装m2repository库教程"},{"content":"Welcome to Hugo theme Stack. This is your first post. Edit or delete it, then start writing!\nFor more information about this theme, check the documentation: https://stack.jimmycai.com/\nWant a site like this? Check out hugo-theme-stack-stater\nPhoto by Pawel Czerwinski on Unsplash\n","date":"1970-01-01T00:00:00Z","image":"https://takuron.com/post/hello-world/cover_hu_e95a4276bf860a84.jpg","permalink":"https://takuron.com/post/hello-world/","title":"Hello World"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] One line code block 1 \u0026lt;p\u0026gt;A paragraph\u0026lt;/p\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nMath Typesetting Stack has built-in support for math typesetting using KaTeX.\nIt\u0026rsquo;s not enabled by default side-wide, but you can enable it for individual posts by adding math: true to the front matter. Or you can enable it side-wide by adding math = true to the params.article section in config.toml.\nInline math This is an inline mathematical expression: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\n1 $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$ Block math $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ 1 2 3 $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ $$ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi $$ 1 2 3 $$ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi $$ Image gallery Hugo theme Stack supports the creation of interactive image galleries using Markdown. It\u0026rsquo;s powered by PhotoSwipe and its syntax was inspired by Typlog.\nTo use this feature, the image must be in the same directory as the Markdown file, as it uses Hugo\u0026rsquo;s page bundle feature to read the dimensions of the image. External images are not supported.\nSyntax 1 ![Image 1](1.jpg) ![Image 2](2.jpg) Result Photo by mymind and Luke Chesser on Unsplash\nShortcodes For more details, check out the documentation.\nBilibili video Tencent video YouTube video Generic video file Your browser doesn't support HTML5 video. Here is a link to the video instead. Gist GitLab Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― A famous person, The book they wrote Photo by Codioful on Unsplash\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"1970-01-01T00:00:00Z","permalink":"https://takuron.com/post/syntax-guide/","title":"Markdown Syntax Guide"}]